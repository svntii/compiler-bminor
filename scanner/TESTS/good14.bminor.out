IDENTIFIER		text: main
COLON		text: :
KEYWORD		text: function
KEYWORD		text: integer
PARL		text: (
IDENTIFIER		text: argc
COLON		text: :
KEYWORD		text: integer
COMMA		text: ,
IDENTIFIER		text: argv
COLON		text: :
KEYWORD		text: array
BRACKL		text: [
BRACKR		text: ]
KEYWORD		text: string
PARR		text: )
ASSIGNMENT		text: =
CRLL		text: {
CRLR		text: }
IDENTIFIER		text: boolFunction
COLON		text: :
KEYWORD		text: function
KEYWORD		text: boolean
PARL		text: (
IDENTIFIER		text: intVar
COLON		text: :
KEYWORD		text: integer
PARR		text: )
ASSIGNMENT		text: =
CRLL		text: {
KEYWORD		text: return
IDENTIFIER		text: intVar
GREATER_THAN		text: >
KEYWORD		text: 5
SEMICOLON		text: ;
CRLR		text: }
IDENTIFIER		text: intFunction
COLON		text: :
KEYWORD		text: function
KEYWORD		text: integer
PARL		text: (
KEYWORD		text: integer
IDENTIFIER		text: n
PARR		text: )
ASSIGNMENT		text: =
CRLL		text: {
IDENTIFIER		text: total
COLON		text: :
KEYWORD		text: integer
ASSIGNMENT		text: =
KEYWORD		text: 0
SEMICOLON		text: ;
IDENTIFIER		text: int
IDENTIFIER		text: count
SEMICOLON		text: ;
KEYWORD		text: for
PARL		text: (
IDENTIFIER		text: count
ASSIGNMENT		text: =
KEYWORD		text: 0
SEMICOLON		text: ;
IDENTIFIER		text: count
LESS_THAN		text: <
IDENTIFIER		text: n
ADD		text: +
KEYWORD		text: 1
SEMICOLON		text: ;
IDENTIFIER		text: count
POS_INCREMENT		text: ++
PARR		text: )
CRLL		text: {
IDENTIFIER		text: total
ASSIGNMENT		text: =
IDENTIFIER		text: total
ADD		text: +
IDENTIFIER		text: count
SEMICOLON		text: ;
CRLR		text: }
