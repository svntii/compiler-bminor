COMMENT		text: // just runs all basic tokens
//
/* comment */
KEYWORD		text: array
KEYWORD		text: boolean
KEYWORD		text: char
KEYWORD		text: else
KEYWORD		text: false
KEYWORD		text: for
KEYWORD		text: function
KEYWORD		text: if
KEYWORD		text: integer
KEYWORD		text: print
KEYWORD		text: return
KEYWORD		text: string
KEYWORD		text: true
KEYWORD		text: void
KEYWORD		text: while
COLON		text: :
SEMICOLON		text: ;
COMMA		text: ,
BRACKL		text: [
BRACKR		text: ]
CRLL		text: {
CRLR		text: }
PARL		text: (
PARR		text: )
ASSIGNMENT		text: =
POS_INCREMENT		text: ^
ADD		text: +
SUB		text: -
POS_INCREMENT		text: ++
POS_DECREMENT		text: --
MULTIPLY		text: *
DIVIDE		text: /
MODULO		text: %
COMPARISON		text: ==
GREATER_THAN		text: >
ASSIGNMENT		text: =
COMPARISON		text: <=
LESS_THAN		text: <
GREATER_THAN		text: >
COMPARISON		text: !=
IDENTIFIER		text: a
IDENTIFIER		text: ab
IDENTIFIER		text: ab3
IDENTIFIER		text: ab3a
KEYWORD		text: 12314
KEYWORD		text: 1
KEYWORD		text: 12
KEYWORD		text: 123
CHARACTER_LITERAL		text: 'A'
STRING_LITERAL		text: ""
STRING_LITERAL		text: "a"
STRING_LITERAL		text: "aa"
