Terminals unused in grammar

    TOKEN_ERROR
    TOKEN_COMMENT


Grammar

    0 $accept: program $end

    1 program: declaration_list TOKEN_EOF
    2        | TOKEN_EOF

    3 declaration_list: declaration declaration_list
    4                 | declaration

    5 declaration: TOKEN_IDENT ":" auto_decl decl_stmnt ";"
    6            | TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" "=" "{" stmnt_list "}"
    7            | TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" ";"

    8 decl_stmnt: "=" expr
    9           | %empty

   10 auto_decl: TOKEN_AUTO
   11          | type_decl

   12 type_decl: TOKEN_INT
   13          | TOKEN_BOOL
   14          | TOKEN_CHAR
   15          | TOKEN_STR
   16          | TOKEN_ARRAY "[" inside_arr "]" auto_decl

   17 auto_decl_args: TOKEN_AUTO
   18               | type_decl_args

   19 type_decl_args: TOKEN_INT
   20               | TOKEN_BOOL
   21               | TOKEN_CHAR
   22               | TOKEN_STR
   23               | TOKEN_ARRAY "[" expr "]" auto_decl_args
   24               | TOKEN_FUNC return_types

   25 decl_args_epsilon: decl_args
   26                  | %empty

   27 decl_args: TOKEN_IDENT ":" auto_decl_args decl_args_end

   28 decl_args_end: "," decl_args
   29              | %empty

   30 statement: TOKEN_RETURN expr ";"
   31          | TOKEN_IF "(" expr ")" statement
   32          | TOKEN_IF "(" expr ")" if_term TOKEN_ELSE statement
   33          | TOKEN_WHILE "(" expr ")" statement
   34          | TOKEN_FOR "(" for_list ")" statement
   35          | "{" stmnt_list "}"
   36          | TOKEN_PRINT expr_epsilon ";"
   37          | TOKEN_IDENT ":" auto_decl decl_stmnt ";"
   38          | expr ";"

   39 stmnt_list: statement stmnt_list
   40           | statement

   41 if_term: TOKEN_IF "(" expr ")" if_term TOKEN_ELSE if_term
   42        | "{" stmnt_list "}"

   43 for_list: for_arg ";" for_arg ";" for_arg

   44 for_arg: expr
   45        | %empty

   46 return_types: TOKEN_VOID
   47             | TOKEN_INT
   48             | TOKEN_BOOL
   49             | TOKEN_CHAR
   50             | TOKEN_STR
   51             | TOKEN_FUNC return_types

   52 expr_epsilon: expr_list
   53             | %empty

   54 expr_list: expr "," expr_list
   55          | expr

   56 expr: ident_assign "=" expr
   57     | or "?" expr ":" expr
   58     | or

   59 or: or "||" and
   60   | and

   61 and: and "&&" comparison
   62    | comparison

   63 comparison: comparison ">" term
   64           | comparison ">=" term
   65           | comparison "<" term
   66           | comparison "<=" term
   67           | comparison "==" term
   68           | comparison "!=" term
   69           | term

   70 term: term "+" factor
   71     | term "-" factor
   72     | factor

   73 factor: factor "*" exponent
   74       | factor "/" exponent
   75       | factor "%" exponent
   76       | exponent

   77 exponent: exponent "^" unary
   78         | unary

   79 unary: "-" unary
   80      | "!" unary
   81      | postfix

   82 postfix: pre_atomic "++"
   83        | pre_atomic "--"
   84        | pre_atomic

   85 pre_atomic: TOKEN_IDENT "(" arg_epsilon ")"
   86           | TOKEN_IDENT "[" inside_arr "]" array_end
   87           | "(" expr ")"
   88           | atomic

   89 ident_assign: TOKEN_IDENT
   90             | TOKEN_IDENT "[" inside_arr "]" array_end

   91 atomic: TOKEN_NUMBER
   92       | TOKEN_STRLIT
   93       | TOKEN_CHARLIT
   94       | TOKEN_TRUE
   95       | TOKEN_FALSE
   96       | TOKEN_IDENT
   97       | "{" atomic_array_epsilon "}"

   98 atomic_array_epsilon: atomic_array
   99                     | %empty

  100 atomic_array: atomic atomic_array_end

  101 atomic_array_end: "," atomic_array
  102                 | %empty

  103 arg_epsilon: arg_list
  104            | %empty

  105 arg_list: expr arg_list_end

  106 arg_list_end: "," arg_list
  107             | %empty

  108 array_end: "[" inside_arr "]"
  109          | %empty

  110 inside_arr: expr
  111           | %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOKEN_ARRAY (258) 16 23
    TOKEN_AUTO (259) 10 17
    TOKEN_BOOL (260) 13 20 48
    TOKEN_CHAR (261) 14 21 49
    TOKEN_ELSE (262) 32 41
    TOKEN_TRUE (263) 94
    TOKEN_FALSE (264) 95
    TOKEN_FOR (265) 34
    TOKEN_FUNC (266) 6 7 24 51
    TOKEN_IF (267) 31 32 41
    TOKEN_INT (268) 12 19 47
    TOKEN_PRINT (269) 36
    TOKEN_RETURN (270) 30
    TOKEN_STR (271) 15 22 50
    TOKEN_VOID (272) 46
    TOKEN_WHILE (273) 33
    ";" (274) 5 7 30 36 37 38 43
    ":" (275) 5 6 7 27 37 57
    "," (276) 28 54 101 106
    "[" (277) 16 23 86 90 108
    "]" (278) 16 23 86 90 108
    "{" (279) 6 35 42 97
    "}" (280) 6 35 42 97
    "(" (281) 6 7 31 32 33 34 41 85 87
    ")" (282) 6 7 31 32 33 34 41 85 87
    "?" (283) 57
    "!=" (284) 68
    "<" (285) 65
    "<=" (286) 66
    ">" (287) 63
    ">=" (288) 64
    "==" (289) 67
    "+" (290) 70
    "-" (291) 71 79
    "/" (292) 74
    "*" (293) 73
    "%" (294) 75
    "^" (295) 77
    "||" (296) 59
    "&&" (297) 61
    "!" (298) 80
    "--" (299) 83
    "++" (300) 82
    "=" (301) 6 8 56
    TOKEN_CHARLIT (302) 93
    TOKEN_STRLIT (303) 92
    TOKEN_IDENT (304) 5 6 7 27 37 85 86 89 90 96
    TOKEN_NUMBER (305) 91
    TOKEN_ERROR (306)
    TOKEN_COMMENT (307)
    TOKEN_EOF (308) 1 2


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    program (55)
        on left: 1 2
        on right: 0
    declaration_list (56)
        on left: 3 4
        on right: 1 3
    declaration (57)
        on left: 5 6 7
        on right: 3 4
    decl_stmnt (58)
        on left: 8 9
        on right: 5 37
    auto_decl (59)
        on left: 10 11
        on right: 5 16 37
    type_decl (60)
        on left: 12 13 14 15 16
        on right: 11
    auto_decl_args (61)
        on left: 17 18
        on right: 23 27
    type_decl_args (62)
        on left: 19 20 21 22 23 24
        on right: 18
    decl_args_epsilon (63)
        on left: 25 26
        on right: 6 7
    decl_args (64)
        on left: 27
        on right: 25 28
    decl_args_end (65)
        on left: 28 29
        on right: 27
    statement (66)
        on left: 30 31 32 33 34 35 36 37 38
        on right: 31 32 33 34 39 40
    stmnt_list (67)
        on left: 39 40
        on right: 6 35 39 42
    if_term (68)
        on left: 41 42
        on right: 32 41
    for_list (69)
        on left: 43
        on right: 34
    for_arg (70)
        on left: 44 45
        on right: 43
    return_types (71)
        on left: 46 47 48 49 50 51
        on right: 6 7 24 51
    expr_epsilon (72)
        on left: 52 53
        on right: 36
    expr_list (73)
        on left: 54 55
        on right: 52 54
    expr (74)
        on left: 56 57 58
        on right: 8 23 30 31 32 33 38 41 44 54 55 56 57 87 105 110
    or (75)
        on left: 59 60
        on right: 57 58 59
    and (76)
        on left: 61 62
        on right: 59 60 61
    comparison (77)
        on left: 63 64 65 66 67 68 69
        on right: 61 62 63 64 65 66 67 68
    term (78)
        on left: 70 71 72
        on right: 63 64 65 66 67 68 69 70 71
    factor (79)
        on left: 73 74 75 76
        on right: 70 71 72 73 74 75
    exponent (80)
        on left: 77 78
        on right: 73 74 75 76 77
    unary (81)
        on left: 79 80 81
        on right: 77 78 79 80
    postfix (82)
        on left: 82 83 84
        on right: 81
    pre_atomic (83)
        on left: 85 86 87 88
        on right: 82 83 84
    ident_assign (84)
        on left: 89 90
        on right: 56
    atomic (85)
        on left: 91 92 93 94 95 96 97
        on right: 88 100
    atomic_array_epsilon (86)
        on left: 98 99
        on right: 97
    atomic_array (87)
        on left: 100
        on right: 98 101
    atomic_array_end (88)
        on left: 101 102
        on right: 100
    arg_epsilon (89)
        on left: 103 104
        on right: 85
    arg_list (90)
        on left: 105
        on right: 103 106
    arg_list_end (91)
        on left: 106 107
        on right: 105
    array_end (92)
        on left: 108 109
        on right: 86 90
    inside_arr (93)
        on left: 110 111
        on right: 16 86 90 108


State 0

    0 $accept: . program $end

    TOKEN_IDENT  shift, and go to state 1
    TOKEN_EOF    shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5


State 1

    5 declaration: TOKEN_IDENT . ":" auto_decl decl_stmnt ";"
    6            | TOKEN_IDENT . ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" "=" "{" stmnt_list "}"
    7            | TOKEN_IDENT . ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" ";"

    ":"  shift, and go to state 6


State 2

    2 program: TOKEN_EOF .

    $default  reduce using rule 2 (program)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 7


State 4

    1 program: declaration_list . TOKEN_EOF

    TOKEN_EOF  shift, and go to state 8


State 5

    3 declaration_list: declaration . declaration_list
    4                 | declaration .

    TOKEN_IDENT  shift, and go to state 1

    $default  reduce using rule 4 (declaration_list)

    declaration_list  go to state 9
    declaration       go to state 5


State 6

    5 declaration: TOKEN_IDENT ":" . auto_decl decl_stmnt ";"
    6            | TOKEN_IDENT ":" . TOKEN_FUNC return_types "(" decl_args_epsilon ")" "=" "{" stmnt_list "}"
    7            | TOKEN_IDENT ":" . TOKEN_FUNC return_types "(" decl_args_epsilon ")" ";"

    TOKEN_ARRAY  shift, and go to state 10
    TOKEN_AUTO   shift, and go to state 11
    TOKEN_BOOL   shift, and go to state 12
    TOKEN_CHAR   shift, and go to state 13
    TOKEN_FUNC   shift, and go to state 14
    TOKEN_INT    shift, and go to state 15
    TOKEN_STR    shift, and go to state 16

    auto_decl  go to state 17
    type_decl  go to state 18


State 7

    0 $accept: program $end .

    $default  accept


State 8

    1 program: declaration_list TOKEN_EOF .

    $default  reduce using rule 1 (program)


State 9

    3 declaration_list: declaration declaration_list .

    $default  reduce using rule 3 (declaration_list)


State 10

   16 type_decl: TOKEN_ARRAY . "[" inside_arr "]" auto_decl

    "["  shift, and go to state 19


State 11

   10 auto_decl: TOKEN_AUTO .

    $default  reduce using rule 10 (auto_decl)


State 12

   13 type_decl: TOKEN_BOOL .

    $default  reduce using rule 13 (type_decl)


State 13

   14 type_decl: TOKEN_CHAR .

    $default  reduce using rule 14 (type_decl)


State 14

    6 declaration: TOKEN_IDENT ":" TOKEN_FUNC . return_types "(" decl_args_epsilon ")" "=" "{" stmnt_list "}"
    7            | TOKEN_IDENT ":" TOKEN_FUNC . return_types "(" decl_args_epsilon ")" ";"

    TOKEN_BOOL  shift, and go to state 20
    TOKEN_CHAR  shift, and go to state 21
    TOKEN_FUNC  shift, and go to state 22
    TOKEN_INT   shift, and go to state 23
    TOKEN_STR   shift, and go to state 24
    TOKEN_VOID  shift, and go to state 25

    return_types  go to state 26


State 15

   12 type_decl: TOKEN_INT .

    $default  reduce using rule 12 (type_decl)


State 16

   15 type_decl: TOKEN_STR .

    $default  reduce using rule 15 (type_decl)


State 17

    5 declaration: TOKEN_IDENT ":" auto_decl . decl_stmnt ";"

    "="  shift, and go to state 27

    $default  reduce using rule 9 (decl_stmnt)

    decl_stmnt  go to state 28


State 18

   11 auto_decl: type_decl .

    $default  reduce using rule 11 (auto_decl)


State 19

   16 type_decl: TOKEN_ARRAY "[" . inside_arr "]" auto_decl

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 111 (inside_arr)

    expr          go to state 39
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50
    inside_arr    go to state 51


State 20

   48 return_types: TOKEN_BOOL .

    $default  reduce using rule 48 (return_types)


State 21

   49 return_types: TOKEN_CHAR .

    $default  reduce using rule 49 (return_types)


State 22

   51 return_types: TOKEN_FUNC . return_types

    TOKEN_BOOL  shift, and go to state 20
    TOKEN_CHAR  shift, and go to state 21
    TOKEN_FUNC  shift, and go to state 22
    TOKEN_INT   shift, and go to state 23
    TOKEN_STR   shift, and go to state 24
    TOKEN_VOID  shift, and go to state 25

    return_types  go to state 52


State 23

   47 return_types: TOKEN_INT .

    $default  reduce using rule 47 (return_types)


State 24

   50 return_types: TOKEN_STR .

    $default  reduce using rule 50 (return_types)


State 25

   46 return_types: TOKEN_VOID .

    $default  reduce using rule 46 (return_types)


State 26

    6 declaration: TOKEN_IDENT ":" TOKEN_FUNC return_types . "(" decl_args_epsilon ")" "=" "{" stmnt_list "}"
    7            | TOKEN_IDENT ":" TOKEN_FUNC return_types . "(" decl_args_epsilon ")" ";"

    "("  shift, and go to state 53


State 27

    8 decl_stmnt: "=" . expr

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr          go to state 54
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 28

    5 declaration: TOKEN_IDENT ":" auto_decl decl_stmnt . ";"

    ";"  shift, and go to state 55


State 29

   94 atomic: TOKEN_TRUE .

    $default  reduce using rule 94 (atomic)


State 30

   95 atomic: TOKEN_FALSE .

    $default  reduce using rule 95 (atomic)


State 31

   97 atomic: "{" . atomic_array_epsilon "}"

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 56
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 99 (atomic_array_epsilon)

    atomic                go to state 57
    atomic_array_epsilon  go to state 58
    atomic_array          go to state 59


State 32

   87 pre_atomic: "(" . expr ")"

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr          go to state 60
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 33

   79 unary: "-" . unary

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 61
    TOKEN_NUMBER   shift, and go to state 38

    unary       go to state 62
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 50


State 34

   80 unary: "!" . unary

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 61
    TOKEN_NUMBER   shift, and go to state 38

    unary       go to state 63
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 50


State 35

   93 atomic: TOKEN_CHARLIT .

    $default  reduce using rule 93 (atomic)


State 36

   92 atomic: TOKEN_STRLIT .

    $default  reduce using rule 92 (atomic)


State 37

   85 pre_atomic: TOKEN_IDENT . "(" arg_epsilon ")"
   86           | TOKEN_IDENT . "[" inside_arr "]" array_end
   89 ident_assign: TOKEN_IDENT .
   90             | TOKEN_IDENT . "[" inside_arr "]" array_end
   96 atomic: TOKEN_IDENT .

    "["  shift, and go to state 64
    "("  shift, and go to state 65

    "="       reduce using rule 89 (ident_assign)
    $default  reduce using rule 96 (atomic)


State 38

   91 atomic: TOKEN_NUMBER .

    $default  reduce using rule 91 (atomic)


State 39

  110 inside_arr: expr .

    $default  reduce using rule 110 (inside_arr)


State 40

   57 expr: or . "?" expr ":" expr
   58     | or .
   59 or: or . "||" and

    "?"   shift, and go to state 66
    "||"  shift, and go to state 67

    $default  reduce using rule 58 (expr)


State 41

   60 or: and .
   61 and: and . "&&" comparison

    "&&"  shift, and go to state 68

    $default  reduce using rule 60 (or)


State 42

   62 and: comparison .
   63 comparison: comparison . ">" term
   64           | comparison . ">=" term
   65           | comparison . "<" term
   66           | comparison . "<=" term
   67           | comparison . "==" term
   68           | comparison . "!=" term

    "!="  shift, and go to state 69
    "<"   shift, and go to state 70
    "<="  shift, and go to state 71
    ">"   shift, and go to state 72
    ">="  shift, and go to state 73
    "=="  shift, and go to state 74

    $default  reduce using rule 62 (and)


State 43

   69 comparison: term .
   70 term: term . "+" factor
   71     | term . "-" factor

    "+"  shift, and go to state 75
    "-"  shift, and go to state 76

    $default  reduce using rule 69 (comparison)


State 44

   72 term: factor .
   73 factor: factor . "*" exponent
   74       | factor . "/" exponent
   75       | factor . "%" exponent

    "/"  shift, and go to state 77
    "*"  shift, and go to state 78
    "%"  shift, and go to state 79

    $default  reduce using rule 72 (term)


State 45

   76 factor: exponent .
   77 exponent: exponent . "^" unary

    "^"  shift, and go to state 80

    $default  reduce using rule 76 (factor)


State 46

   78 exponent: unary .

    $default  reduce using rule 78 (exponent)


State 47

   81 unary: postfix .

    $default  reduce using rule 81 (unary)


State 48

   82 postfix: pre_atomic . "++"
   83        | pre_atomic . "--"
   84        | pre_atomic .

    "--"  shift, and go to state 81
    "++"  shift, and go to state 82

    $default  reduce using rule 84 (postfix)


State 49

   56 expr: ident_assign . "=" expr

    "="  shift, and go to state 83


State 50

   88 pre_atomic: atomic .

    $default  reduce using rule 88 (pre_atomic)


State 51

   16 type_decl: TOKEN_ARRAY "[" inside_arr . "]" auto_decl

    "]"  shift, and go to state 84


State 52

   51 return_types: TOKEN_FUNC return_types .

    $default  reduce using rule 51 (return_types)


State 53

    6 declaration: TOKEN_IDENT ":" TOKEN_FUNC return_types "(" . decl_args_epsilon ")" "=" "{" stmnt_list "}"
    7            | TOKEN_IDENT ":" TOKEN_FUNC return_types "(" . decl_args_epsilon ")" ";"

    TOKEN_IDENT  shift, and go to state 85

    $default  reduce using rule 26 (decl_args_epsilon)

    decl_args_epsilon  go to state 86
    decl_args          go to state 87


State 54

    8 decl_stmnt: "=" expr .

    $default  reduce using rule 8 (decl_stmnt)


State 55

    5 declaration: TOKEN_IDENT ":" auto_decl decl_stmnt ";" .

    $default  reduce using rule 5 (declaration)


State 56

   96 atomic: TOKEN_IDENT .

    $default  reduce using rule 96 (atomic)


State 57

  100 atomic_array: atomic . atomic_array_end

    ","  shift, and go to state 88

    $default  reduce using rule 102 (atomic_array_end)

    atomic_array_end  go to state 89


State 58

   97 atomic: "{" atomic_array_epsilon . "}"

    "}"  shift, and go to state 90


State 59

   98 atomic_array_epsilon: atomic_array .

    $default  reduce using rule 98 (atomic_array_epsilon)


State 60

   87 pre_atomic: "(" expr . ")"

    ")"  shift, and go to state 91


State 61

   85 pre_atomic: TOKEN_IDENT . "(" arg_epsilon ")"
   86           | TOKEN_IDENT . "[" inside_arr "]" array_end
   96 atomic: TOKEN_IDENT .

    "["  shift, and go to state 92
    "("  shift, and go to state 65

    $default  reduce using rule 96 (atomic)


State 62

   79 unary: "-" unary .

    $default  reduce using rule 79 (unary)


State 63

   80 unary: "!" unary .

    $default  reduce using rule 80 (unary)


State 64

   86 pre_atomic: TOKEN_IDENT "[" . inside_arr "]" array_end
   90 ident_assign: TOKEN_IDENT "[" . inside_arr "]" array_end

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 111 (inside_arr)

    expr          go to state 39
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50
    inside_arr    go to state 93


State 65

   85 pre_atomic: TOKEN_IDENT "(" . arg_epsilon ")"

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 104 (arg_epsilon)

    expr          go to state 94
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50
    arg_epsilon   go to state 95
    arg_list      go to state 96


State 66

   57 expr: or "?" . expr ":" expr

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr          go to state 97
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 67

   59 or: or "||" . and

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 61
    TOKEN_NUMBER   shift, and go to state 38

    and         go to state 98
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 50


State 68

   61 and: and "&&" . comparison

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 61
    TOKEN_NUMBER   shift, and go to state 38

    comparison  go to state 99
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 50


State 69

   68 comparison: comparison "!=" . term

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 61
    TOKEN_NUMBER   shift, and go to state 38

    term        go to state 100
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 50


State 70

   65 comparison: comparison "<" . term

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 61
    TOKEN_NUMBER   shift, and go to state 38

    term        go to state 101
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 50


State 71

   66 comparison: comparison "<=" . term

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 61
    TOKEN_NUMBER   shift, and go to state 38

    term        go to state 102
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 50


State 72

   63 comparison: comparison ">" . term

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 61
    TOKEN_NUMBER   shift, and go to state 38

    term        go to state 103
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 50


State 73

   64 comparison: comparison ">=" . term

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 61
    TOKEN_NUMBER   shift, and go to state 38

    term        go to state 104
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 50


State 74

   67 comparison: comparison "==" . term

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 61
    TOKEN_NUMBER   shift, and go to state 38

    term        go to state 105
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 50


State 75

   70 term: term "+" . factor

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 61
    TOKEN_NUMBER   shift, and go to state 38

    factor      go to state 106
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 50


State 76

   71 term: term "-" . factor

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 61
    TOKEN_NUMBER   shift, and go to state 38

    factor      go to state 107
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 50


State 77

   74 factor: factor "/" . exponent

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 61
    TOKEN_NUMBER   shift, and go to state 38

    exponent    go to state 108
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 50


State 78

   73 factor: factor "*" . exponent

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 61
    TOKEN_NUMBER   shift, and go to state 38

    exponent    go to state 109
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 50


State 79

   75 factor: factor "%" . exponent

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 61
    TOKEN_NUMBER   shift, and go to state 38

    exponent    go to state 110
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 50


State 80

   77 exponent: exponent "^" . unary

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 61
    TOKEN_NUMBER   shift, and go to state 38

    unary       go to state 111
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 50


State 81

   83 postfix: pre_atomic "--" .

    $default  reduce using rule 83 (postfix)


State 82

   82 postfix: pre_atomic "++" .

    $default  reduce using rule 82 (postfix)


State 83

   56 expr: ident_assign "=" . expr

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr          go to state 112
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 84

   16 type_decl: TOKEN_ARRAY "[" inside_arr "]" . auto_decl

    TOKEN_ARRAY  shift, and go to state 10
    TOKEN_AUTO   shift, and go to state 11
    TOKEN_BOOL   shift, and go to state 12
    TOKEN_CHAR   shift, and go to state 13
    TOKEN_INT    shift, and go to state 15
    TOKEN_STR    shift, and go to state 16

    auto_decl  go to state 113
    type_decl  go to state 18


State 85

   27 decl_args: TOKEN_IDENT . ":" auto_decl_args decl_args_end

    ":"  shift, and go to state 114


State 86

    6 declaration: TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon . ")" "=" "{" stmnt_list "}"
    7            | TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon . ")" ";"

    ")"  shift, and go to state 115


State 87

   25 decl_args_epsilon: decl_args .

    $default  reduce using rule 25 (decl_args_epsilon)


State 88

  101 atomic_array_end: "," . atomic_array

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 56
    TOKEN_NUMBER   shift, and go to state 38

    atomic        go to state 57
    atomic_array  go to state 116


State 89

  100 atomic_array: atomic atomic_array_end .

    $default  reduce using rule 100 (atomic_array)


State 90

   97 atomic: "{" atomic_array_epsilon "}" .

    $default  reduce using rule 97 (atomic)


State 91

   87 pre_atomic: "(" expr ")" .

    $default  reduce using rule 87 (pre_atomic)


State 92

   86 pre_atomic: TOKEN_IDENT "[" . inside_arr "]" array_end

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 111 (inside_arr)

    expr          go to state 39
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50
    inside_arr    go to state 117


State 93

   86 pre_atomic: TOKEN_IDENT "[" inside_arr . "]" array_end
   90 ident_assign: TOKEN_IDENT "[" inside_arr . "]" array_end

    "]"  shift, and go to state 118


State 94

  105 arg_list: expr . arg_list_end

    ","  shift, and go to state 119

    $default  reduce using rule 107 (arg_list_end)

    arg_list_end  go to state 120


State 95

   85 pre_atomic: TOKEN_IDENT "(" arg_epsilon . ")"

    ")"  shift, and go to state 121


State 96

  103 arg_epsilon: arg_list .

    $default  reduce using rule 103 (arg_epsilon)


State 97

   57 expr: or "?" expr . ":" expr

    ":"  shift, and go to state 122


State 98

   59 or: or "||" and .
   61 and: and . "&&" comparison

    "&&"  shift, and go to state 68

    $default  reduce using rule 59 (or)


State 99

   61 and: and "&&" comparison .
   63 comparison: comparison . ">" term
   64           | comparison . ">=" term
   65           | comparison . "<" term
   66           | comparison . "<=" term
   67           | comparison . "==" term
   68           | comparison . "!=" term

    "!="  shift, and go to state 69
    "<"   shift, and go to state 70
    "<="  shift, and go to state 71
    ">"   shift, and go to state 72
    ">="  shift, and go to state 73
    "=="  shift, and go to state 74

    $default  reduce using rule 61 (and)


State 100

   68 comparison: comparison "!=" term .
   70 term: term . "+" factor
   71     | term . "-" factor

    "+"  shift, and go to state 75
    "-"  shift, and go to state 76

    $default  reduce using rule 68 (comparison)


State 101

   65 comparison: comparison "<" term .
   70 term: term . "+" factor
   71     | term . "-" factor

    "+"  shift, and go to state 75
    "-"  shift, and go to state 76

    $default  reduce using rule 65 (comparison)


State 102

   66 comparison: comparison "<=" term .
   70 term: term . "+" factor
   71     | term . "-" factor

    "+"  shift, and go to state 75
    "-"  shift, and go to state 76

    $default  reduce using rule 66 (comparison)


State 103

   63 comparison: comparison ">" term .
   70 term: term . "+" factor
   71     | term . "-" factor

    "+"  shift, and go to state 75
    "-"  shift, and go to state 76

    $default  reduce using rule 63 (comparison)


State 104

   64 comparison: comparison ">=" term .
   70 term: term . "+" factor
   71     | term . "-" factor

    "+"  shift, and go to state 75
    "-"  shift, and go to state 76

    $default  reduce using rule 64 (comparison)


State 105

   67 comparison: comparison "==" term .
   70 term: term . "+" factor
   71     | term . "-" factor

    "+"  shift, and go to state 75
    "-"  shift, and go to state 76

    $default  reduce using rule 67 (comparison)


State 106

   70 term: term "+" factor .
   73 factor: factor . "*" exponent
   74       | factor . "/" exponent
   75       | factor . "%" exponent

    "/"  shift, and go to state 77
    "*"  shift, and go to state 78
    "%"  shift, and go to state 79

    $default  reduce using rule 70 (term)


State 107

   71 term: term "-" factor .
   73 factor: factor . "*" exponent
   74       | factor . "/" exponent
   75       | factor . "%" exponent

    "/"  shift, and go to state 77
    "*"  shift, and go to state 78
    "%"  shift, and go to state 79

    $default  reduce using rule 71 (term)


State 108

   74 factor: factor "/" exponent .
   77 exponent: exponent . "^" unary

    "^"  shift, and go to state 80

    $default  reduce using rule 74 (factor)


State 109

   73 factor: factor "*" exponent .
   77 exponent: exponent . "^" unary

    "^"  shift, and go to state 80

    $default  reduce using rule 73 (factor)


State 110

   75 factor: factor "%" exponent .
   77 exponent: exponent . "^" unary

    "^"  shift, and go to state 80

    $default  reduce using rule 75 (factor)


State 111

   77 exponent: exponent "^" unary .

    $default  reduce using rule 77 (exponent)


State 112

   56 expr: ident_assign "=" expr .

    $default  reduce using rule 56 (expr)


State 113

   16 type_decl: TOKEN_ARRAY "[" inside_arr "]" auto_decl .

    $default  reduce using rule 16 (type_decl)


State 114

   27 decl_args: TOKEN_IDENT ":" . auto_decl_args decl_args_end

    TOKEN_ARRAY  shift, and go to state 123
    TOKEN_AUTO   shift, and go to state 124
    TOKEN_BOOL   shift, and go to state 125
    TOKEN_CHAR   shift, and go to state 126
    TOKEN_FUNC   shift, and go to state 127
    TOKEN_INT    shift, and go to state 128
    TOKEN_STR    shift, and go to state 129

    auto_decl_args  go to state 130
    type_decl_args  go to state 131


State 115

    6 declaration: TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" . "=" "{" stmnt_list "}"
    7            | TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" . ";"

    ";"  shift, and go to state 132
    "="  shift, and go to state 133


State 116

  101 atomic_array_end: "," atomic_array .

    $default  reduce using rule 101 (atomic_array_end)


State 117

   86 pre_atomic: TOKEN_IDENT "[" inside_arr . "]" array_end

    "]"  shift, and go to state 134


State 118

   86 pre_atomic: TOKEN_IDENT "[" inside_arr "]" . array_end
   90 ident_assign: TOKEN_IDENT "[" inside_arr "]" . array_end

    "["  shift, and go to state 135

    $default  reduce using rule 109 (array_end)

    array_end  go to state 136


State 119

  106 arg_list_end: "," . arg_list

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr          go to state 94
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50
    arg_list      go to state 137


State 120

  105 arg_list: expr arg_list_end .

    $default  reduce using rule 105 (arg_list)


State 121

   85 pre_atomic: TOKEN_IDENT "(" arg_epsilon ")" .

    $default  reduce using rule 85 (pre_atomic)


State 122

   57 expr: or "?" expr ":" . expr

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr          go to state 138
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 123

   23 type_decl_args: TOKEN_ARRAY . "[" expr "]" auto_decl_args

    "["  shift, and go to state 139


State 124

   17 auto_decl_args: TOKEN_AUTO .

    $default  reduce using rule 17 (auto_decl_args)


State 125

   20 type_decl_args: TOKEN_BOOL .

    $default  reduce using rule 20 (type_decl_args)


State 126

   21 type_decl_args: TOKEN_CHAR .

    $default  reduce using rule 21 (type_decl_args)


State 127

   24 type_decl_args: TOKEN_FUNC . return_types

    TOKEN_BOOL  shift, and go to state 20
    TOKEN_CHAR  shift, and go to state 21
    TOKEN_FUNC  shift, and go to state 22
    TOKEN_INT   shift, and go to state 23
    TOKEN_STR   shift, and go to state 24
    TOKEN_VOID  shift, and go to state 25

    return_types  go to state 140


State 128

   19 type_decl_args: TOKEN_INT .

    $default  reduce using rule 19 (type_decl_args)


State 129

   22 type_decl_args: TOKEN_STR .

    $default  reduce using rule 22 (type_decl_args)


State 130

   27 decl_args: TOKEN_IDENT ":" auto_decl_args . decl_args_end

    ","  shift, and go to state 141

    $default  reduce using rule 29 (decl_args_end)

    decl_args_end  go to state 142


State 131

   18 auto_decl_args: type_decl_args .

    $default  reduce using rule 18 (auto_decl_args)


State 132

    7 declaration: TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" ";" .

    $default  reduce using rule 7 (declaration)


State 133

    6 declaration: TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" "=" . "{" stmnt_list "}"

    "{"  shift, and go to state 143


State 134

   86 pre_atomic: TOKEN_IDENT "[" inside_arr "]" . array_end

    "["  shift, and go to state 135

    $default  reduce using rule 109 (array_end)

    array_end  go to state 144


State 135

  108 array_end: "[" . inside_arr "]"

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 111 (inside_arr)

    expr          go to state 39
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50
    inside_arr    go to state 145


State 136

   86 pre_atomic: TOKEN_IDENT "[" inside_arr "]" array_end .
   90 ident_assign: TOKEN_IDENT "[" inside_arr "]" array_end .

    "="       reduce using rule 90 (ident_assign)
    $default  reduce using rule 86 (pre_atomic)


State 137

  106 arg_list_end: "," arg_list .

    $default  reduce using rule 106 (arg_list_end)


State 138

   57 expr: or "?" expr ":" expr .

    $default  reduce using rule 57 (expr)


State 139

   23 type_decl_args: TOKEN_ARRAY "[" . expr "]" auto_decl_args

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr          go to state 146
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 140

   24 type_decl_args: TOKEN_FUNC return_types .

    $default  reduce using rule 24 (type_decl_args)


State 141

   28 decl_args_end: "," . decl_args

    TOKEN_IDENT  shift, and go to state 85

    decl_args  go to state 147


State 142

   27 decl_args: TOKEN_IDENT ":" auto_decl_args decl_args_end .

    $default  reduce using rule 27 (decl_args)


State 143

    6 declaration: TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" "=" "{" . stmnt_list "}"

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    TOKEN_FOR      shift, and go to state 148
    TOKEN_IF       shift, and go to state 149
    TOKEN_PRINT    shift, and go to state 150
    TOKEN_RETURN   shift, and go to state 151
    TOKEN_WHILE    shift, and go to state 152
    "{"            shift, and go to state 153
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 154
    TOKEN_NUMBER   shift, and go to state 38

    statement     go to state 155
    stmnt_list    go to state 156
    expr          go to state 157
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 144

   86 pre_atomic: TOKEN_IDENT "[" inside_arr "]" array_end .

    $default  reduce using rule 86 (pre_atomic)


State 145

  108 array_end: "[" inside_arr . "]"

    "]"  shift, and go to state 158


State 146

   23 type_decl_args: TOKEN_ARRAY "[" expr . "]" auto_decl_args

    "]"  shift, and go to state 159


State 147

   28 decl_args_end: "," decl_args .

    $default  reduce using rule 28 (decl_args_end)


State 148

   34 statement: TOKEN_FOR . "(" for_list ")" statement

    "("  shift, and go to state 160


State 149

   31 statement: TOKEN_IF . "(" expr ")" statement
   32          | TOKEN_IF . "(" expr ")" if_term TOKEN_ELSE statement

    "("  shift, and go to state 161


State 150

   36 statement: TOKEN_PRINT . expr_epsilon ";"

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 53 (expr_epsilon)

    expr_epsilon  go to state 162
    expr_list     go to state 163
    expr          go to state 164
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 151

   30 statement: TOKEN_RETURN . expr ";"

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr          go to state 165
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 152

   33 statement: TOKEN_WHILE . "(" expr ")" statement

    "("  shift, and go to state 166


State 153

   35 statement: "{" . stmnt_list "}"
   97 atomic: "{" . atomic_array_epsilon "}"

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    TOKEN_FOR      shift, and go to state 148
    TOKEN_IF       shift, and go to state 149
    TOKEN_PRINT    shift, and go to state 150
    TOKEN_RETURN   shift, and go to state 151
    TOKEN_WHILE    shift, and go to state 152
    "{"            shift, and go to state 153
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 154
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 99 (atomic_array_epsilon)

    statement             go to state 155
    stmnt_list            go to state 167
    expr                  go to state 157
    or                    go to state 40
    and                   go to state 41
    comparison            go to state 42
    term                  go to state 43
    factor                go to state 44
    exponent              go to state 45
    unary                 go to state 46
    postfix               go to state 47
    pre_atomic            go to state 48
    ident_assign          go to state 49
    atomic                go to state 168
    atomic_array_epsilon  go to state 58
    atomic_array          go to state 59


State 154

   37 statement: TOKEN_IDENT . ":" auto_decl decl_stmnt ";"
   85 pre_atomic: TOKEN_IDENT . "(" arg_epsilon ")"
   86           | TOKEN_IDENT . "[" inside_arr "]" array_end
   89 ident_assign: TOKEN_IDENT .
   90             | TOKEN_IDENT . "[" inside_arr "]" array_end
   96 atomic: TOKEN_IDENT .

    ":"  shift, and go to state 169
    "["  shift, and go to state 64
    "("  shift, and go to state 65

    "="       reduce using rule 89 (ident_assign)
    $default  reduce using rule 96 (atomic)


State 155

   39 stmnt_list: statement . stmnt_list
   40           | statement .

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    TOKEN_FOR      shift, and go to state 148
    TOKEN_IF       shift, and go to state 149
    TOKEN_PRINT    shift, and go to state 150
    TOKEN_RETURN   shift, and go to state 151
    TOKEN_WHILE    shift, and go to state 152
    "{"            shift, and go to state 153
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 154
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 40 (stmnt_list)

    statement     go to state 155
    stmnt_list    go to state 170
    expr          go to state 157
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 156

    6 declaration: TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" "=" "{" stmnt_list . "}"

    "}"  shift, and go to state 171


State 157

   38 statement: expr . ";"

    ";"  shift, and go to state 172


State 158

  108 array_end: "[" inside_arr "]" .

    $default  reduce using rule 108 (array_end)


State 159

   23 type_decl_args: TOKEN_ARRAY "[" expr "]" . auto_decl_args

    TOKEN_ARRAY  shift, and go to state 123
    TOKEN_AUTO   shift, and go to state 124
    TOKEN_BOOL   shift, and go to state 125
    TOKEN_CHAR   shift, and go to state 126
    TOKEN_FUNC   shift, and go to state 127
    TOKEN_INT    shift, and go to state 128
    TOKEN_STR    shift, and go to state 129

    auto_decl_args  go to state 173
    type_decl_args  go to state 131


State 160

   34 statement: TOKEN_FOR "(" . for_list ")" statement

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 45 (for_arg)

    for_list      go to state 174
    for_arg       go to state 175
    expr          go to state 176
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 161

   31 statement: TOKEN_IF "(" . expr ")" statement
   32          | TOKEN_IF "(" . expr ")" if_term TOKEN_ELSE statement

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr          go to state 177
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 162

   36 statement: TOKEN_PRINT expr_epsilon . ";"

    ";"  shift, and go to state 178


State 163

   52 expr_epsilon: expr_list .

    $default  reduce using rule 52 (expr_epsilon)


State 164

   54 expr_list: expr . "," expr_list
   55          | expr .

    ","  shift, and go to state 179

    $default  reduce using rule 55 (expr_list)


State 165

   30 statement: TOKEN_RETURN expr . ";"

    ";"  shift, and go to state 180


State 166

   33 statement: TOKEN_WHILE "(" . expr ")" statement

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr          go to state 181
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 167

   35 statement: "{" stmnt_list . "}"

    "}"  shift, and go to state 182


State 168

   88 pre_atomic: atomic .
  100 atomic_array: atomic . atomic_array_end

    ","  shift, and go to state 88

    "}"       reduce using rule 102 (atomic_array_end)
    $default  reduce using rule 88 (pre_atomic)

    atomic_array_end  go to state 89


State 169

   37 statement: TOKEN_IDENT ":" . auto_decl decl_stmnt ";"

    TOKEN_ARRAY  shift, and go to state 10
    TOKEN_AUTO   shift, and go to state 11
    TOKEN_BOOL   shift, and go to state 12
    TOKEN_CHAR   shift, and go to state 13
    TOKEN_INT    shift, and go to state 15
    TOKEN_STR    shift, and go to state 16

    auto_decl  go to state 183
    type_decl  go to state 18


State 170

   39 stmnt_list: statement stmnt_list .

    $default  reduce using rule 39 (stmnt_list)


State 171

    6 declaration: TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" "=" "{" stmnt_list "}" .

    $default  reduce using rule 6 (declaration)


State 172

   38 statement: expr ";" .

    $default  reduce using rule 38 (statement)


State 173

   23 type_decl_args: TOKEN_ARRAY "[" expr "]" auto_decl_args .

    $default  reduce using rule 23 (type_decl_args)


State 174

   34 statement: TOKEN_FOR "(" for_list . ")" statement

    ")"  shift, and go to state 184


State 175

   43 for_list: for_arg . ";" for_arg ";" for_arg

    ";"  shift, and go to state 185


State 176

   44 for_arg: expr .

    $default  reduce using rule 44 (for_arg)


State 177

   31 statement: TOKEN_IF "(" expr . ")" statement
   32          | TOKEN_IF "(" expr . ")" if_term TOKEN_ELSE statement

    ")"  shift, and go to state 186


State 178

   36 statement: TOKEN_PRINT expr_epsilon ";" .

    $default  reduce using rule 36 (statement)


State 179

   54 expr_list: expr "," . expr_list

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr_list     go to state 187
    expr          go to state 164
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 180

   30 statement: TOKEN_RETURN expr ";" .

    $default  reduce using rule 30 (statement)


State 181

   33 statement: TOKEN_WHILE "(" expr . ")" statement

    ")"  shift, and go to state 188


State 182

   35 statement: "{" stmnt_list "}" .

    $default  reduce using rule 35 (statement)


State 183

   37 statement: TOKEN_IDENT ":" auto_decl . decl_stmnt ";"

    "="  shift, and go to state 27

    $default  reduce using rule 9 (decl_stmnt)

    decl_stmnt  go to state 189


State 184

   34 statement: TOKEN_FOR "(" for_list ")" . statement

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    TOKEN_FOR      shift, and go to state 148
    TOKEN_IF       shift, and go to state 149
    TOKEN_PRINT    shift, and go to state 150
    TOKEN_RETURN   shift, and go to state 151
    TOKEN_WHILE    shift, and go to state 152
    "{"            shift, and go to state 153
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 154
    TOKEN_NUMBER   shift, and go to state 38

    statement     go to state 190
    expr          go to state 157
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 185

   43 for_list: for_arg ";" . for_arg ";" for_arg

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 45 (for_arg)

    for_arg       go to state 191
    expr          go to state 176
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 186

   31 statement: TOKEN_IF "(" expr ")" . statement
   32          | TOKEN_IF "(" expr ")" . if_term TOKEN_ELSE statement

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    TOKEN_FOR      shift, and go to state 148
    TOKEN_IF       shift, and go to state 192
    TOKEN_PRINT    shift, and go to state 150
    TOKEN_RETURN   shift, and go to state 151
    TOKEN_WHILE    shift, and go to state 152
    "{"            shift, and go to state 193
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 154
    TOKEN_NUMBER   shift, and go to state 38

    statement     go to state 194
    if_term       go to state 195
    expr          go to state 157
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 187

   54 expr_list: expr "," expr_list .

    $default  reduce using rule 54 (expr_list)


State 188

   33 statement: TOKEN_WHILE "(" expr ")" . statement

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    TOKEN_FOR      shift, and go to state 148
    TOKEN_IF       shift, and go to state 149
    TOKEN_PRINT    shift, and go to state 150
    TOKEN_RETURN   shift, and go to state 151
    TOKEN_WHILE    shift, and go to state 152
    "{"            shift, and go to state 153
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 154
    TOKEN_NUMBER   shift, and go to state 38

    statement     go to state 196
    expr          go to state 157
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 189

   37 statement: TOKEN_IDENT ":" auto_decl decl_stmnt . ";"

    ";"  shift, and go to state 197


State 190

   34 statement: TOKEN_FOR "(" for_list ")" statement .

    $default  reduce using rule 34 (statement)


State 191

   43 for_list: for_arg ";" for_arg . ";" for_arg

    ";"  shift, and go to state 198


State 192

   31 statement: TOKEN_IF . "(" expr ")" statement
   32          | TOKEN_IF . "(" expr ")" if_term TOKEN_ELSE statement
   41 if_term: TOKEN_IF . "(" expr ")" if_term TOKEN_ELSE if_term

    "("  shift, and go to state 199


State 193

   35 statement: "{" . stmnt_list "}"
   42 if_term: "{" . stmnt_list "}"
   97 atomic: "{" . atomic_array_epsilon "}"

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    TOKEN_FOR      shift, and go to state 148
    TOKEN_IF       shift, and go to state 149
    TOKEN_PRINT    shift, and go to state 150
    TOKEN_RETURN   shift, and go to state 151
    TOKEN_WHILE    shift, and go to state 152
    "{"            shift, and go to state 153
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 154
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 99 (atomic_array_epsilon)

    statement             go to state 155
    stmnt_list            go to state 200
    expr                  go to state 157
    or                    go to state 40
    and                   go to state 41
    comparison            go to state 42
    term                  go to state 43
    factor                go to state 44
    exponent              go to state 45
    unary                 go to state 46
    postfix               go to state 47
    pre_atomic            go to state 48
    ident_assign          go to state 49
    atomic                go to state 168
    atomic_array_epsilon  go to state 58
    atomic_array          go to state 59


State 194

   31 statement: TOKEN_IF "(" expr ")" statement .

    $default  reduce using rule 31 (statement)


State 195

   32 statement: TOKEN_IF "(" expr ")" if_term . TOKEN_ELSE statement

    TOKEN_ELSE  shift, and go to state 201


State 196

   33 statement: TOKEN_WHILE "(" expr ")" statement .

    $default  reduce using rule 33 (statement)


State 197

   37 statement: TOKEN_IDENT ":" auto_decl decl_stmnt ";" .

    $default  reduce using rule 37 (statement)


State 198

   43 for_list: for_arg ";" for_arg ";" . for_arg

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 45 (for_arg)

    for_arg       go to state 202
    expr          go to state 176
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 199

   31 statement: TOKEN_IF "(" . expr ")" statement
   32          | TOKEN_IF "(" . expr ")" if_term TOKEN_ELSE statement
   41 if_term: TOKEN_IF "(" . expr ")" if_term TOKEN_ELSE if_term

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr          go to state 203
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 200

   35 statement: "{" stmnt_list . "}"
   42 if_term: "{" stmnt_list . "}"

    "}"  shift, and go to state 204


State 201

   32 statement: TOKEN_IF "(" expr ")" if_term TOKEN_ELSE . statement

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    TOKEN_FOR      shift, and go to state 148
    TOKEN_IF       shift, and go to state 149
    TOKEN_PRINT    shift, and go to state 150
    TOKEN_RETURN   shift, and go to state 151
    TOKEN_WHILE    shift, and go to state 152
    "{"            shift, and go to state 153
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 154
    TOKEN_NUMBER   shift, and go to state 38

    statement     go to state 205
    expr          go to state 157
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 202

   43 for_list: for_arg ";" for_arg ";" for_arg .

    $default  reduce using rule 43 (for_list)


State 203

   31 statement: TOKEN_IF "(" expr . ")" statement
   32          | TOKEN_IF "(" expr . ")" if_term TOKEN_ELSE statement
   41 if_term: TOKEN_IF "(" expr . ")" if_term TOKEN_ELSE if_term

    ")"  shift, and go to state 206


State 204

   35 statement: "{" stmnt_list "}" .
   42 if_term: "{" stmnt_list "}" .

    TOKEN_ELSE  reduce using rule 42 (if_term)
    $default    reduce using rule 35 (statement)


State 205

   32 statement: TOKEN_IF "(" expr ")" if_term TOKEN_ELSE statement .

    $default  reduce using rule 32 (statement)


State 206

   31 statement: TOKEN_IF "(" expr ")" . statement
   32          | TOKEN_IF "(" expr ")" . if_term TOKEN_ELSE statement
   41 if_term: TOKEN_IF "(" expr ")" . if_term TOKEN_ELSE if_term

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    TOKEN_FOR      shift, and go to state 148
    TOKEN_IF       shift, and go to state 192
    TOKEN_PRINT    shift, and go to state 150
    TOKEN_RETURN   shift, and go to state 151
    TOKEN_WHILE    shift, and go to state 152
    "{"            shift, and go to state 193
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 154
    TOKEN_NUMBER   shift, and go to state 38

    statement     go to state 194
    if_term       go to state 207
    expr          go to state 157
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 207

   32 statement: TOKEN_IF "(" expr ")" if_term . TOKEN_ELSE statement
   41 if_term: TOKEN_IF "(" expr ")" if_term . TOKEN_ELSE if_term

    TOKEN_ELSE  shift, and go to state 208


State 208

   32 statement: TOKEN_IF "(" expr ")" if_term TOKEN_ELSE . statement
   41 if_term: TOKEN_IF "(" expr ")" if_term TOKEN_ELSE . if_term

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    TOKEN_FOR      shift, and go to state 148
    TOKEN_IF       shift, and go to state 192
    TOKEN_PRINT    shift, and go to state 150
    TOKEN_RETURN   shift, and go to state 151
    TOKEN_WHILE    shift, and go to state 152
    "{"            shift, and go to state 193
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 154
    TOKEN_NUMBER   shift, and go to state 38

    statement     go to state 205
    if_term       go to state 209
    expr          go to state 157
    or            go to state 40
    and           go to state 41
    comparison    go to state 42
    term          go to state 43
    factor        go to state 44
    exponent      go to state 45
    unary         go to state 46
    postfix       go to state 47
    pre_atomic    go to state 48
    ident_assign  go to state 49
    atomic        go to state 50


State 209

   41 if_term: TOKEN_IF "(" expr ")" if_term TOKEN_ELSE if_term .

    $default  reduce using rule 41 (if_term)
