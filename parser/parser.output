Terminals unused in grammar

    TOKEN_ERROR
    TOKEN_COMMENT


Grammar

    0 $accept: program $end

    1 program: declaration_list TOKEN_EOF
    2        | TOKEN_EOF

    3 declaration_list: declaration declaration_list
    4                 | declaration

    5 declaration: TOKEN_IDENT ":" auto_decl decl_stmnt ";"
    6            | TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" "=" "{" stmnt_list "}"
    7            | TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" ";"

    8 decl_stmnt: "=" expr
    9           | %empty

   10 auto_decl: TOKEN_AUTO
   11          | type_decl

   12 type_decl: TOKEN_INT
   13          | TOKEN_BOOL
   14          | TOKEN_CHAR
   15          | TOKEN_STR
   16          | TOKEN_ARRAY "[" inside_arr "]" auto_decl

   17 auto_decl_args: TOKEN_AUTO
   18               | type_decl_args

   19 type_decl_args: TOKEN_INT
   20               | TOKEN_BOOL
   21               | TOKEN_CHAR
   22               | TOKEN_STR
   23               | TOKEN_ARRAY "[" expr "]" auto_decl_args
   24               | TOKEN_FUNC return_types

   25 decl_args_epsilon: decl_args
   26                  | %empty

   27 decl_args: TOKEN_IDENT ":" auto_decl_args decl_args_end

   28 decl_args_end: "," decl_args
   29              | %empty

   30 statement: TOKEN_RETURN expr ";"
   31          | TOKEN_IF "(" expr ")" statement
   32          | TOKEN_IF "(" expr ")" if_term TOKEN_ELSE statement
   33          | TOKEN_WHILE "(" expr ")" statement
   34          | TOKEN_FOR "(" for_list ")" statement
   35          | "{" stmnt_list "}"
   36          | TOKEN_PRINT expr_list ";"
   37          | TOKEN_IDENT ":" auto_decl decl_stmnt ";"
   38          | expr ";"

   39 stmnt_list: statement stmnt_list
   40           | statement

   41 if_term: TOKEN_IF "(" expr ")" if_term TOKEN_ELSE if_term
   42        | expr

   43 for_list: for_arg ";" for_arg ";" for_arg

   44 for_arg: expr
   45        | %empty

   46 return_types: TOKEN_VOID
   47             | TOKEN_INT
   48             | TOKEN_BOOL
   49             | TOKEN_CHAR
   50             | TOKEN_STR
   51             | TOKEN_FUNC return_types

   52 expr_list: expr "," expr_list
   53          | expr

   54 expr: TOKEN_IDENT "=" expr
   55     | or "?" expr ":" expr
   56     | or

   57 or: or "||" and
   58   | and

   59 and: and "&&" comparison
   60    | comparison

   61 comparison: comparison ">" term
   62           | comparison ">=" term
   63           | comparison "<" term
   64           | comparison "<=" term
   65           | comparison "==" term
   66           | comparison "!=" term
   67           | term

   68 term: term "+" factor
   69     | term "-" factor
   70     | factor

   71 factor: factor "*" exponent
   72       | factor "/" exponent
   73       | factor "%" exponent
   74       | exponent

   75 exponent: exponent "^" unary
   76         | unary

   77 unary: "-" unary
   78      | "!" unary
   79      | postfix

   80 postfix: pre_atomic "++"
   81        | pre_atomic "--"
   82        | pre_atomic

   83 pre_atomic: TOKEN_IDENT "(" arg_epsilon ")"
   84           | TOKEN_IDENT "[" inside_arr "]" array_end
   85           | "(" expr ")"
   86           | atomic

   87 atomic: TOKEN_NUMBER
   88       | TOKEN_STRLIT
   89       | TOKEN_CHARLIT
   90       | TOKEN_TRUE
   91       | TOKEN_FALSE
   92       | TOKEN_IDENT
   93       | "{" atomic_array_epsilon "}"

   94 atomic_array_epsilon: atomic_array
   95                     | %empty

   96 atomic_array: atomic atomic_array_end

   97 atomic_array_end: "," atomic_array
   98                 | %empty

   99 arg_epsilon: arg_list
  100            | %empty

  101 arg_list: expr arg_list_end

  102 arg_list_end: "," arg_list
  103             | %empty

  104 array_end: "[" expr_list "]"
  105          | %empty

  106 inside_arr: expr
  107           | %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOKEN_ARRAY (258) 16 23
    TOKEN_AUTO (259) 10 17
    TOKEN_BOOL (260) 13 20 48
    TOKEN_CHAR (261) 14 21 49
    TOKEN_ELSE (262) 32 41
    TOKEN_TRUE (263) 90
    TOKEN_FALSE (264) 91
    TOKEN_FOR (265) 34
    TOKEN_FUNC (266) 6 7 24 51
    TOKEN_IF (267) 31 32 41
    TOKEN_INT (268) 12 19 47
    TOKEN_PRINT (269) 36
    TOKEN_RETURN (270) 30
    TOKEN_STR (271) 15 22 50
    TOKEN_VOID (272) 46
    TOKEN_WHILE (273) 33
    ";" (274) 5 7 30 36 37 38 43
    ":" (275) 5 6 7 27 37 55
    "," (276) 28 52 97 102
    "[" (277) 16 23 84 104
    "]" (278) 16 23 84 104
    "{" (279) 6 35 93
    "}" (280) 6 35 93
    "(" (281) 6 7 31 32 33 34 41 83 85
    ")" (282) 6 7 31 32 33 34 41 83 85
    "?" (283) 55
    "!=" (284) 66
    "<" (285) 63
    "<=" (286) 64
    ">" (287) 61
    ">=" (288) 62
    "==" (289) 65
    "+" (290) 68
    "-" (291) 69 77
    "/" (292) 72
    "*" (293) 71
    "%" (294) 73
    "^" (295) 75
    "||" (296) 57
    "&&" (297) 59
    "!" (298) 78
    "--" (299) 81
    "++" (300) 80
    "=" (301) 6 8 54
    TOKEN_CHARLIT (302) 89
    TOKEN_STRLIT (303) 88
    TOKEN_IDENT (304) 5 6 7 27 37 54 83 84 92
    TOKEN_NUMBER (305) 87
    TOKEN_ERROR (306)
    TOKEN_COMMENT (307)
    TOKEN_EOF (308) 1 2


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    program (55)
        on left: 1 2
        on right: 0
    declaration_list (56)
        on left: 3 4
        on right: 1 3
    declaration (57)
        on left: 5 6 7
        on right: 3 4
    decl_stmnt (58)
        on left: 8 9
        on right: 5 37
    auto_decl (59)
        on left: 10 11
        on right: 5 16 37
    type_decl (60)
        on left: 12 13 14 15 16
        on right: 11
    auto_decl_args (61)
        on left: 17 18
        on right: 23 27
    type_decl_args (62)
        on left: 19 20 21 22 23 24
        on right: 18
    decl_args_epsilon (63)
        on left: 25 26
        on right: 6 7
    decl_args (64)
        on left: 27
        on right: 25 28
    decl_args_end (65)
        on left: 28 29
        on right: 27
    statement (66)
        on left: 30 31 32 33 34 35 36 37 38
        on right: 31 32 33 34 39 40
    stmnt_list (67)
        on left: 39 40
        on right: 6 35 39
    if_term (68)
        on left: 41 42
        on right: 32 41
    for_list (69)
        on left: 43
        on right: 34
    for_arg (70)
        on left: 44 45
        on right: 43
    return_types (71)
        on left: 46 47 48 49 50 51
        on right: 6 7 24 51
    expr_list (72)
        on left: 52 53
        on right: 36 52 104
    expr (73)
        on left: 54 55 56
        on right: 8 23 30 31 32 33 38 41 42 44 52 53 54 55 85 101 106
    or (74)
        on left: 57 58
        on right: 55 56 57
    and (75)
        on left: 59 60
        on right: 57 58 59
    comparison (76)
        on left: 61 62 63 64 65 66 67
        on right: 59 60 61 62 63 64 65 66
    term (77)
        on left: 68 69 70
        on right: 61 62 63 64 65 66 67 68 69
    factor (78)
        on left: 71 72 73 74
        on right: 68 69 70 71 72 73
    exponent (79)
        on left: 75 76
        on right: 71 72 73 74 75
    unary (80)
        on left: 77 78 79
        on right: 75 76 77 78
    postfix (81)
        on left: 80 81 82
        on right: 79
    pre_atomic (82)
        on left: 83 84 85 86
        on right: 80 81 82
    atomic (83)
        on left: 87 88 89 90 91 92 93
        on right: 86 96
    atomic_array_epsilon (84)
        on left: 94 95
        on right: 93
    atomic_array (85)
        on left: 96
        on right: 94 97
    atomic_array_end (86)
        on left: 97 98
        on right: 96
    arg_epsilon (87)
        on left: 99 100
        on right: 83
    arg_list (88)
        on left: 101
        on right: 99 102
    arg_list_end (89)
        on left: 102 103
        on right: 101
    array_end (90)
        on left: 104 105
        on right: 84
    inside_arr (91)
        on left: 106 107
        on right: 16 84


State 0

    0 $accept: . program $end

    TOKEN_IDENT  shift, and go to state 1
    TOKEN_EOF    shift, and go to state 2

    program           go to state 3
    declaration_list  go to state 4
    declaration       go to state 5


State 1

    5 declaration: TOKEN_IDENT . ":" auto_decl decl_stmnt ";"
    6            | TOKEN_IDENT . ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" "=" "{" stmnt_list "}"
    7            | TOKEN_IDENT . ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" ";"

    ":"  shift, and go to state 6


State 2

    2 program: TOKEN_EOF .

    $default  reduce using rule 2 (program)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 7


State 4

    1 program: declaration_list . TOKEN_EOF

    TOKEN_EOF  shift, and go to state 8


State 5

    3 declaration_list: declaration . declaration_list
    4                 | declaration .

    TOKEN_IDENT  shift, and go to state 1

    $default  reduce using rule 4 (declaration_list)

    declaration_list  go to state 9
    declaration       go to state 5


State 6

    5 declaration: TOKEN_IDENT ":" . auto_decl decl_stmnt ";"
    6            | TOKEN_IDENT ":" . TOKEN_FUNC return_types "(" decl_args_epsilon ")" "=" "{" stmnt_list "}"
    7            | TOKEN_IDENT ":" . TOKEN_FUNC return_types "(" decl_args_epsilon ")" ";"

    TOKEN_ARRAY  shift, and go to state 10
    TOKEN_AUTO   shift, and go to state 11
    TOKEN_BOOL   shift, and go to state 12
    TOKEN_CHAR   shift, and go to state 13
    TOKEN_FUNC   shift, and go to state 14
    TOKEN_INT    shift, and go to state 15
    TOKEN_STR    shift, and go to state 16

    auto_decl  go to state 17
    type_decl  go to state 18


State 7

    0 $accept: program $end .

    $default  accept


State 8

    1 program: declaration_list TOKEN_EOF .

    $default  reduce using rule 1 (program)


State 9

    3 declaration_list: declaration declaration_list .

    $default  reduce using rule 3 (declaration_list)


State 10

   16 type_decl: TOKEN_ARRAY . "[" inside_arr "]" auto_decl

    "["  shift, and go to state 19


State 11

   10 auto_decl: TOKEN_AUTO .

    $default  reduce using rule 10 (auto_decl)


State 12

   13 type_decl: TOKEN_BOOL .

    $default  reduce using rule 13 (type_decl)


State 13

   14 type_decl: TOKEN_CHAR .

    $default  reduce using rule 14 (type_decl)


State 14

    6 declaration: TOKEN_IDENT ":" TOKEN_FUNC . return_types "(" decl_args_epsilon ")" "=" "{" stmnt_list "}"
    7            | TOKEN_IDENT ":" TOKEN_FUNC . return_types "(" decl_args_epsilon ")" ";"

    TOKEN_BOOL  shift, and go to state 20
    TOKEN_CHAR  shift, and go to state 21
    TOKEN_FUNC  shift, and go to state 22
    TOKEN_INT   shift, and go to state 23
    TOKEN_STR   shift, and go to state 24
    TOKEN_VOID  shift, and go to state 25

    return_types  go to state 26


State 15

   12 type_decl: TOKEN_INT .

    $default  reduce using rule 12 (type_decl)


State 16

   15 type_decl: TOKEN_STR .

    $default  reduce using rule 15 (type_decl)


State 17

    5 declaration: TOKEN_IDENT ":" auto_decl . decl_stmnt ";"

    "="  shift, and go to state 27

    $default  reduce using rule 9 (decl_stmnt)

    decl_stmnt  go to state 28


State 18

   11 auto_decl: type_decl .

    $default  reduce using rule 11 (auto_decl)


State 19

   16 type_decl: TOKEN_ARRAY "[" . inside_arr "]" auto_decl

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 107 (inside_arr)

    expr        go to state 39
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49
    inside_arr  go to state 50


State 20

   48 return_types: TOKEN_BOOL .

    $default  reduce using rule 48 (return_types)


State 21

   49 return_types: TOKEN_CHAR .

    $default  reduce using rule 49 (return_types)


State 22

   51 return_types: TOKEN_FUNC . return_types

    TOKEN_BOOL  shift, and go to state 20
    TOKEN_CHAR  shift, and go to state 21
    TOKEN_FUNC  shift, and go to state 22
    TOKEN_INT   shift, and go to state 23
    TOKEN_STR   shift, and go to state 24
    TOKEN_VOID  shift, and go to state 25

    return_types  go to state 51


State 23

   47 return_types: TOKEN_INT .

    $default  reduce using rule 47 (return_types)


State 24

   50 return_types: TOKEN_STR .

    $default  reduce using rule 50 (return_types)


State 25

   46 return_types: TOKEN_VOID .

    $default  reduce using rule 46 (return_types)


State 26

    6 declaration: TOKEN_IDENT ":" TOKEN_FUNC return_types . "(" decl_args_epsilon ")" "=" "{" stmnt_list "}"
    7            | TOKEN_IDENT ":" TOKEN_FUNC return_types . "(" decl_args_epsilon ")" ";"

    "("  shift, and go to state 52


State 27

    8 decl_stmnt: "=" . expr

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr        go to state 53
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 28

    5 declaration: TOKEN_IDENT ":" auto_decl decl_stmnt . ";"

    ";"  shift, and go to state 54


State 29

   90 atomic: TOKEN_TRUE .

    $default  reduce using rule 90 (atomic)


State 30

   91 atomic: TOKEN_FALSE .

    $default  reduce using rule 91 (atomic)


State 31

   93 atomic: "{" . atomic_array_epsilon "}"

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 55
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 95 (atomic_array_epsilon)

    atomic                go to state 56
    atomic_array_epsilon  go to state 57
    atomic_array          go to state 58


State 32

   85 pre_atomic: "(" . expr ")"

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr        go to state 59
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 33

   77 unary: "-" . unary

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 60
    TOKEN_NUMBER   shift, and go to state 38

    unary       go to state 61
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 34

   78 unary: "!" . unary

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 60
    TOKEN_NUMBER   shift, and go to state 38

    unary       go to state 62
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 35

   89 atomic: TOKEN_CHARLIT .

    $default  reduce using rule 89 (atomic)


State 36

   88 atomic: TOKEN_STRLIT .

    $default  reduce using rule 88 (atomic)


State 37

   54 expr: TOKEN_IDENT . "=" expr
   83 pre_atomic: TOKEN_IDENT . "(" arg_epsilon ")"
   84           | TOKEN_IDENT . "[" inside_arr "]" array_end
   92 atomic: TOKEN_IDENT .

    "["  shift, and go to state 63
    "("  shift, and go to state 64
    "="  shift, and go to state 65

    $default  reduce using rule 92 (atomic)


State 38

   87 atomic: TOKEN_NUMBER .

    $default  reduce using rule 87 (atomic)


State 39

  106 inside_arr: expr .

    $default  reduce using rule 106 (inside_arr)


State 40

   55 expr: or . "?" expr ":" expr
   56     | or .
   57 or: or . "||" and

    "?"   shift, and go to state 66
    "||"  shift, and go to state 67

    $default  reduce using rule 56 (expr)


State 41

   58 or: and .
   59 and: and . "&&" comparison

    "&&"  shift, and go to state 68

    $default  reduce using rule 58 (or)


State 42

   60 and: comparison .
   61 comparison: comparison . ">" term
   62           | comparison . ">=" term
   63           | comparison . "<" term
   64           | comparison . "<=" term
   65           | comparison . "==" term
   66           | comparison . "!=" term

    "!="  shift, and go to state 69
    "<"   shift, and go to state 70
    "<="  shift, and go to state 71
    ">"   shift, and go to state 72
    ">="  shift, and go to state 73
    "=="  shift, and go to state 74

    $default  reduce using rule 60 (and)


State 43

   67 comparison: term .
   68 term: term . "+" factor
   69     | term . "-" factor

    "+"  shift, and go to state 75
    "-"  shift, and go to state 76

    $default  reduce using rule 67 (comparison)


State 44

   70 term: factor .
   71 factor: factor . "*" exponent
   72       | factor . "/" exponent
   73       | factor . "%" exponent

    "/"  shift, and go to state 77
    "*"  shift, and go to state 78
    "%"  shift, and go to state 79

    $default  reduce using rule 70 (term)


State 45

   74 factor: exponent .
   75 exponent: exponent . "^" unary

    "^"  shift, and go to state 80

    $default  reduce using rule 74 (factor)


State 46

   76 exponent: unary .

    $default  reduce using rule 76 (exponent)


State 47

   79 unary: postfix .

    $default  reduce using rule 79 (unary)


State 48

   80 postfix: pre_atomic . "++"
   81        | pre_atomic . "--"
   82        | pre_atomic .

    "--"  shift, and go to state 81
    "++"  shift, and go to state 82

    $default  reduce using rule 82 (postfix)


State 49

   86 pre_atomic: atomic .

    $default  reduce using rule 86 (pre_atomic)


State 50

   16 type_decl: TOKEN_ARRAY "[" inside_arr . "]" auto_decl

    "]"  shift, and go to state 83


State 51

   51 return_types: TOKEN_FUNC return_types .

    $default  reduce using rule 51 (return_types)


State 52

    6 declaration: TOKEN_IDENT ":" TOKEN_FUNC return_types "(" . decl_args_epsilon ")" "=" "{" stmnt_list "}"
    7            | TOKEN_IDENT ":" TOKEN_FUNC return_types "(" . decl_args_epsilon ")" ";"

    TOKEN_IDENT  shift, and go to state 84

    $default  reduce using rule 26 (decl_args_epsilon)

    decl_args_epsilon  go to state 85
    decl_args          go to state 86


State 53

    8 decl_stmnt: "=" expr .

    $default  reduce using rule 8 (decl_stmnt)


State 54

    5 declaration: TOKEN_IDENT ":" auto_decl decl_stmnt ";" .

    $default  reduce using rule 5 (declaration)


State 55

   92 atomic: TOKEN_IDENT .

    $default  reduce using rule 92 (atomic)


State 56

   96 atomic_array: atomic . atomic_array_end

    ","  shift, and go to state 87

    $default  reduce using rule 98 (atomic_array_end)

    atomic_array_end  go to state 88


State 57

   93 atomic: "{" atomic_array_epsilon . "}"

    "}"  shift, and go to state 89


State 58

   94 atomic_array_epsilon: atomic_array .

    $default  reduce using rule 94 (atomic_array_epsilon)


State 59

   85 pre_atomic: "(" expr . ")"

    ")"  shift, and go to state 90


State 60

   83 pre_atomic: TOKEN_IDENT . "(" arg_epsilon ")"
   84           | TOKEN_IDENT . "[" inside_arr "]" array_end
   92 atomic: TOKEN_IDENT .

    "["  shift, and go to state 63
    "("  shift, and go to state 64

    $default  reduce using rule 92 (atomic)


State 61

   77 unary: "-" unary .

    $default  reduce using rule 77 (unary)


State 62

   78 unary: "!" unary .

    $default  reduce using rule 78 (unary)


State 63

   84 pre_atomic: TOKEN_IDENT "[" . inside_arr "]" array_end

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 107 (inside_arr)

    expr        go to state 39
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49
    inside_arr  go to state 91


State 64

   83 pre_atomic: TOKEN_IDENT "(" . arg_epsilon ")"

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 100 (arg_epsilon)

    expr         go to state 92
    or           go to state 40
    and          go to state 41
    comparison   go to state 42
    term         go to state 43
    factor       go to state 44
    exponent     go to state 45
    unary        go to state 46
    postfix      go to state 47
    pre_atomic   go to state 48
    atomic       go to state 49
    arg_epsilon  go to state 93
    arg_list     go to state 94


State 65

   54 expr: TOKEN_IDENT "=" . expr

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr        go to state 95
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 66

   55 expr: or "?" . expr ":" expr

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr        go to state 96
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 67

   57 or: or "||" . and

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 60
    TOKEN_NUMBER   shift, and go to state 38

    and         go to state 97
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 68

   59 and: and "&&" . comparison

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 60
    TOKEN_NUMBER   shift, and go to state 38

    comparison  go to state 98
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 69

   66 comparison: comparison "!=" . term

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 60
    TOKEN_NUMBER   shift, and go to state 38

    term        go to state 99
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 70

   63 comparison: comparison "<" . term

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 60
    TOKEN_NUMBER   shift, and go to state 38

    term        go to state 100
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 71

   64 comparison: comparison "<=" . term

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 60
    TOKEN_NUMBER   shift, and go to state 38

    term        go to state 101
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 72

   61 comparison: comparison ">" . term

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 60
    TOKEN_NUMBER   shift, and go to state 38

    term        go to state 102
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 73

   62 comparison: comparison ">=" . term

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 60
    TOKEN_NUMBER   shift, and go to state 38

    term        go to state 103
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 74

   65 comparison: comparison "==" . term

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 60
    TOKEN_NUMBER   shift, and go to state 38

    term        go to state 104
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 75

   68 term: term "+" . factor

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 60
    TOKEN_NUMBER   shift, and go to state 38

    factor      go to state 105
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 76

   69 term: term "-" . factor

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 60
    TOKEN_NUMBER   shift, and go to state 38

    factor      go to state 106
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 77

   72 factor: factor "/" . exponent

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 60
    TOKEN_NUMBER   shift, and go to state 38

    exponent    go to state 107
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 78

   71 factor: factor "*" . exponent

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 60
    TOKEN_NUMBER   shift, and go to state 38

    exponent    go to state 108
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 79

   73 factor: factor "%" . exponent

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 60
    TOKEN_NUMBER   shift, and go to state 38

    exponent    go to state 109
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 80

   75 exponent: exponent "^" . unary

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 60
    TOKEN_NUMBER   shift, and go to state 38

    unary       go to state 110
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 81

   81 postfix: pre_atomic "--" .

    $default  reduce using rule 81 (postfix)


State 82

   80 postfix: pre_atomic "++" .

    $default  reduce using rule 80 (postfix)


State 83

   16 type_decl: TOKEN_ARRAY "[" inside_arr "]" . auto_decl

    TOKEN_ARRAY  shift, and go to state 10
    TOKEN_AUTO   shift, and go to state 11
    TOKEN_BOOL   shift, and go to state 12
    TOKEN_CHAR   shift, and go to state 13
    TOKEN_INT    shift, and go to state 15
    TOKEN_STR    shift, and go to state 16

    auto_decl  go to state 111
    type_decl  go to state 18


State 84

   27 decl_args: TOKEN_IDENT . ":" auto_decl_args decl_args_end

    ":"  shift, and go to state 112


State 85

    6 declaration: TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon . ")" "=" "{" stmnt_list "}"
    7            | TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon . ")" ";"

    ")"  shift, and go to state 113


State 86

   25 decl_args_epsilon: decl_args .

    $default  reduce using rule 25 (decl_args_epsilon)


State 87

   97 atomic_array_end: "," . atomic_array

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 55
    TOKEN_NUMBER   shift, and go to state 38

    atomic        go to state 56
    atomic_array  go to state 114


State 88

   96 atomic_array: atomic atomic_array_end .

    $default  reduce using rule 96 (atomic_array)


State 89

   93 atomic: "{" atomic_array_epsilon "}" .

    $default  reduce using rule 93 (atomic)


State 90

   85 pre_atomic: "(" expr ")" .

    $default  reduce using rule 85 (pre_atomic)


State 91

   84 pre_atomic: TOKEN_IDENT "[" inside_arr . "]" array_end

    "]"  shift, and go to state 115


State 92

  101 arg_list: expr . arg_list_end

    ","  shift, and go to state 116

    $default  reduce using rule 103 (arg_list_end)

    arg_list_end  go to state 117


State 93

   83 pre_atomic: TOKEN_IDENT "(" arg_epsilon . ")"

    ")"  shift, and go to state 118


State 94

   99 arg_epsilon: arg_list .

    $default  reduce using rule 99 (arg_epsilon)


State 95

   54 expr: TOKEN_IDENT "=" expr .

    $default  reduce using rule 54 (expr)


State 96

   55 expr: or "?" expr . ":" expr

    ":"  shift, and go to state 119


State 97

   57 or: or "||" and .
   59 and: and . "&&" comparison

    "&&"  shift, and go to state 68

    $default  reduce using rule 57 (or)


State 98

   59 and: and "&&" comparison .
   61 comparison: comparison . ">" term
   62           | comparison . ">=" term
   63           | comparison . "<" term
   64           | comparison . "<=" term
   65           | comparison . "==" term
   66           | comparison . "!=" term

    "!="  shift, and go to state 69
    "<"   shift, and go to state 70
    "<="  shift, and go to state 71
    ">"   shift, and go to state 72
    ">="  shift, and go to state 73
    "=="  shift, and go to state 74

    $default  reduce using rule 59 (and)


State 99

   66 comparison: comparison "!=" term .
   68 term: term . "+" factor
   69     | term . "-" factor

    "+"  shift, and go to state 75
    "-"  shift, and go to state 76

    $default  reduce using rule 66 (comparison)


State 100

   63 comparison: comparison "<" term .
   68 term: term . "+" factor
   69     | term . "-" factor

    "+"  shift, and go to state 75
    "-"  shift, and go to state 76

    $default  reduce using rule 63 (comparison)


State 101

   64 comparison: comparison "<=" term .
   68 term: term . "+" factor
   69     | term . "-" factor

    "+"  shift, and go to state 75
    "-"  shift, and go to state 76

    $default  reduce using rule 64 (comparison)


State 102

   61 comparison: comparison ">" term .
   68 term: term . "+" factor
   69     | term . "-" factor

    "+"  shift, and go to state 75
    "-"  shift, and go to state 76

    $default  reduce using rule 61 (comparison)


State 103

   62 comparison: comparison ">=" term .
   68 term: term . "+" factor
   69     | term . "-" factor

    "+"  shift, and go to state 75
    "-"  shift, and go to state 76

    $default  reduce using rule 62 (comparison)


State 104

   65 comparison: comparison "==" term .
   68 term: term . "+" factor
   69     | term . "-" factor

    "+"  shift, and go to state 75
    "-"  shift, and go to state 76

    $default  reduce using rule 65 (comparison)


State 105

   68 term: term "+" factor .
   71 factor: factor . "*" exponent
   72       | factor . "/" exponent
   73       | factor . "%" exponent

    "/"  shift, and go to state 77
    "*"  shift, and go to state 78
    "%"  shift, and go to state 79

    $default  reduce using rule 68 (term)


State 106

   69 term: term "-" factor .
   71 factor: factor . "*" exponent
   72       | factor . "/" exponent
   73       | factor . "%" exponent

    "/"  shift, and go to state 77
    "*"  shift, and go to state 78
    "%"  shift, and go to state 79

    $default  reduce using rule 69 (term)


State 107

   72 factor: factor "/" exponent .
   75 exponent: exponent . "^" unary

    "^"  shift, and go to state 80

    $default  reduce using rule 72 (factor)


State 108

   71 factor: factor "*" exponent .
   75 exponent: exponent . "^" unary

    "^"  shift, and go to state 80

    $default  reduce using rule 71 (factor)


State 109

   73 factor: factor "%" exponent .
   75 exponent: exponent . "^" unary

    "^"  shift, and go to state 80

    $default  reduce using rule 73 (factor)


State 110

   75 exponent: exponent "^" unary .

    $default  reduce using rule 75 (exponent)


State 111

   16 type_decl: TOKEN_ARRAY "[" inside_arr "]" auto_decl .

    $default  reduce using rule 16 (type_decl)


State 112

   27 decl_args: TOKEN_IDENT ":" . auto_decl_args decl_args_end

    TOKEN_ARRAY  shift, and go to state 120
    TOKEN_AUTO   shift, and go to state 121
    TOKEN_BOOL   shift, and go to state 122
    TOKEN_CHAR   shift, and go to state 123
    TOKEN_FUNC   shift, and go to state 124
    TOKEN_INT    shift, and go to state 125
    TOKEN_STR    shift, and go to state 126

    auto_decl_args  go to state 127
    type_decl_args  go to state 128


State 113

    6 declaration: TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" . "=" "{" stmnt_list "}"
    7            | TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" . ";"

    ";"  shift, and go to state 129
    "="  shift, and go to state 130


State 114

   97 atomic_array_end: "," atomic_array .

    $default  reduce using rule 97 (atomic_array_end)


State 115

   84 pre_atomic: TOKEN_IDENT "[" inside_arr "]" . array_end

    "["  shift, and go to state 131

    $default  reduce using rule 105 (array_end)

    array_end  go to state 132


State 116

  102 arg_list_end: "," . arg_list

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr        go to state 92
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49
    arg_list    go to state 133


State 117

  101 arg_list: expr arg_list_end .

    $default  reduce using rule 101 (arg_list)


State 118

   83 pre_atomic: TOKEN_IDENT "(" arg_epsilon ")" .

    $default  reduce using rule 83 (pre_atomic)


State 119

   55 expr: or "?" expr ":" . expr

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr        go to state 134
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 120

   23 type_decl_args: TOKEN_ARRAY . "[" expr "]" auto_decl_args

    "["  shift, and go to state 135


State 121

   17 auto_decl_args: TOKEN_AUTO .

    $default  reduce using rule 17 (auto_decl_args)


State 122

   20 type_decl_args: TOKEN_BOOL .

    $default  reduce using rule 20 (type_decl_args)


State 123

   21 type_decl_args: TOKEN_CHAR .

    $default  reduce using rule 21 (type_decl_args)


State 124

   24 type_decl_args: TOKEN_FUNC . return_types

    TOKEN_BOOL  shift, and go to state 20
    TOKEN_CHAR  shift, and go to state 21
    TOKEN_FUNC  shift, and go to state 22
    TOKEN_INT   shift, and go to state 23
    TOKEN_STR   shift, and go to state 24
    TOKEN_VOID  shift, and go to state 25

    return_types  go to state 136


State 125

   19 type_decl_args: TOKEN_INT .

    $default  reduce using rule 19 (type_decl_args)


State 126

   22 type_decl_args: TOKEN_STR .

    $default  reduce using rule 22 (type_decl_args)


State 127

   27 decl_args: TOKEN_IDENT ":" auto_decl_args . decl_args_end

    ","  shift, and go to state 137

    $default  reduce using rule 29 (decl_args_end)

    decl_args_end  go to state 138


State 128

   18 auto_decl_args: type_decl_args .

    $default  reduce using rule 18 (auto_decl_args)


State 129

    7 declaration: TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" ";" .

    $default  reduce using rule 7 (declaration)


State 130

    6 declaration: TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" "=" . "{" stmnt_list "}"

    "{"  shift, and go to state 139


State 131

  104 array_end: "[" . expr_list "]"

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr_list   go to state 140
    expr        go to state 141
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 132

   84 pre_atomic: TOKEN_IDENT "[" inside_arr "]" array_end .

    $default  reduce using rule 84 (pre_atomic)


State 133

  102 arg_list_end: "," arg_list .

    $default  reduce using rule 102 (arg_list_end)


State 134

   55 expr: or "?" expr ":" expr .

    $default  reduce using rule 55 (expr)


State 135

   23 type_decl_args: TOKEN_ARRAY "[" . expr "]" auto_decl_args

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr        go to state 142
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 136

   24 type_decl_args: TOKEN_FUNC return_types .

    $default  reduce using rule 24 (type_decl_args)


State 137

   28 decl_args_end: "," . decl_args

    TOKEN_IDENT  shift, and go to state 84

    decl_args  go to state 143


State 138

   27 decl_args: TOKEN_IDENT ":" auto_decl_args decl_args_end .

    $default  reduce using rule 27 (decl_args)


State 139

    6 declaration: TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" "=" "{" . stmnt_list "}"

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    TOKEN_FOR      shift, and go to state 144
    TOKEN_IF       shift, and go to state 145
    TOKEN_PRINT    shift, and go to state 146
    TOKEN_RETURN   shift, and go to state 147
    TOKEN_WHILE    shift, and go to state 148
    "{"            shift, and go to state 149
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 150
    TOKEN_NUMBER   shift, and go to state 38

    statement   go to state 151
    stmnt_list  go to state 152
    expr        go to state 153
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 140

  104 array_end: "[" expr_list . "]"

    "]"  shift, and go to state 154


State 141

   52 expr_list: expr . "," expr_list
   53          | expr .

    ","  shift, and go to state 155

    $default  reduce using rule 53 (expr_list)


State 142

   23 type_decl_args: TOKEN_ARRAY "[" expr . "]" auto_decl_args

    "]"  shift, and go to state 156


State 143

   28 decl_args_end: "," decl_args .

    $default  reduce using rule 28 (decl_args_end)


State 144

   34 statement: TOKEN_FOR . "(" for_list ")" statement

    "("  shift, and go to state 157


State 145

   31 statement: TOKEN_IF . "(" expr ")" statement
   32          | TOKEN_IF . "(" expr ")" if_term TOKEN_ELSE statement

    "("  shift, and go to state 158


State 146

   36 statement: TOKEN_PRINT . expr_list ";"

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr_list   go to state 159
    expr        go to state 141
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 147

   30 statement: TOKEN_RETURN . expr ";"

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr        go to state 160
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 148

   33 statement: TOKEN_WHILE . "(" expr ")" statement

    "("  shift, and go to state 161


State 149

   35 statement: "{" . stmnt_list "}"
   93 atomic: "{" . atomic_array_epsilon "}"

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    TOKEN_FOR      shift, and go to state 144
    TOKEN_IF       shift, and go to state 145
    TOKEN_PRINT    shift, and go to state 146
    TOKEN_RETURN   shift, and go to state 147
    TOKEN_WHILE    shift, and go to state 148
    "{"            shift, and go to state 149
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 150
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 95 (atomic_array_epsilon)

    statement             go to state 151
    stmnt_list            go to state 162
    expr                  go to state 153
    or                    go to state 40
    and                   go to state 41
    comparison            go to state 42
    term                  go to state 43
    factor                go to state 44
    exponent              go to state 45
    unary                 go to state 46
    postfix               go to state 47
    pre_atomic            go to state 48
    atomic                go to state 163
    atomic_array_epsilon  go to state 57
    atomic_array          go to state 58


State 150

   37 statement: TOKEN_IDENT . ":" auto_decl decl_stmnt ";"
   54 expr: TOKEN_IDENT . "=" expr
   83 pre_atomic: TOKEN_IDENT . "(" arg_epsilon ")"
   84           | TOKEN_IDENT . "[" inside_arr "]" array_end
   92 atomic: TOKEN_IDENT .

    ":"  shift, and go to state 164
    "["  shift, and go to state 63
    "("  shift, and go to state 64
    "="  shift, and go to state 65

    $default  reduce using rule 92 (atomic)


State 151

   39 stmnt_list: statement . stmnt_list
   40           | statement .

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    TOKEN_FOR      shift, and go to state 144
    TOKEN_IF       shift, and go to state 145
    TOKEN_PRINT    shift, and go to state 146
    TOKEN_RETURN   shift, and go to state 147
    TOKEN_WHILE    shift, and go to state 148
    "{"            shift, and go to state 149
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 150
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 40 (stmnt_list)

    statement   go to state 151
    stmnt_list  go to state 165
    expr        go to state 153
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 152

    6 declaration: TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" "=" "{" stmnt_list . "}"

    "}"  shift, and go to state 166


State 153

   38 statement: expr . ";"

    ";"  shift, and go to state 167


State 154

  104 array_end: "[" expr_list "]" .

    $default  reduce using rule 104 (array_end)


State 155

   52 expr_list: expr "," . expr_list

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr_list   go to state 168
    expr        go to state 141
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 156

   23 type_decl_args: TOKEN_ARRAY "[" expr "]" . auto_decl_args

    TOKEN_ARRAY  shift, and go to state 120
    TOKEN_AUTO   shift, and go to state 121
    TOKEN_BOOL   shift, and go to state 122
    TOKEN_CHAR   shift, and go to state 123
    TOKEN_FUNC   shift, and go to state 124
    TOKEN_INT    shift, and go to state 125
    TOKEN_STR    shift, and go to state 126

    auto_decl_args  go to state 169
    type_decl_args  go to state 128


State 157

   34 statement: TOKEN_FOR "(" . for_list ")" statement

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 45 (for_arg)

    for_list    go to state 170
    for_arg     go to state 171
    expr        go to state 172
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 158

   31 statement: TOKEN_IF "(" . expr ")" statement
   32          | TOKEN_IF "(" . expr ")" if_term TOKEN_ELSE statement

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr        go to state 173
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 159

   36 statement: TOKEN_PRINT expr_list . ";"

    ";"  shift, and go to state 174


State 160

   30 statement: TOKEN_RETURN expr . ";"

    ";"  shift, and go to state 175


State 161

   33 statement: TOKEN_WHILE "(" . expr ")" statement

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr        go to state 176
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 162

   35 statement: "{" stmnt_list . "}"

    "}"  shift, and go to state 177


State 163

   86 pre_atomic: atomic .
   96 atomic_array: atomic . atomic_array_end

    ","  shift, and go to state 87

    "}"       reduce using rule 98 (atomic_array_end)
    $default  reduce using rule 86 (pre_atomic)

    atomic_array_end  go to state 88


State 164

   37 statement: TOKEN_IDENT ":" . auto_decl decl_stmnt ";"

    TOKEN_ARRAY  shift, and go to state 10
    TOKEN_AUTO   shift, and go to state 11
    TOKEN_BOOL   shift, and go to state 12
    TOKEN_CHAR   shift, and go to state 13
    TOKEN_INT    shift, and go to state 15
    TOKEN_STR    shift, and go to state 16

    auto_decl  go to state 178
    type_decl  go to state 18


State 165

   39 stmnt_list: statement stmnt_list .

    $default  reduce using rule 39 (stmnt_list)


State 166

    6 declaration: TOKEN_IDENT ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" "=" "{" stmnt_list "}" .

    $default  reduce using rule 6 (declaration)


State 167

   38 statement: expr ";" .

    $default  reduce using rule 38 (statement)


State 168

   52 expr_list: expr "," expr_list .

    $default  reduce using rule 52 (expr_list)


State 169

   23 type_decl_args: TOKEN_ARRAY "[" expr "]" auto_decl_args .

    $default  reduce using rule 23 (type_decl_args)


State 170

   34 statement: TOKEN_FOR "(" for_list . ")" statement

    ")"  shift, and go to state 179


State 171

   43 for_list: for_arg . ";" for_arg ";" for_arg

    ";"  shift, and go to state 180


State 172

   44 for_arg: expr .

    $default  reduce using rule 44 (for_arg)


State 173

   31 statement: TOKEN_IF "(" expr . ")" statement
   32          | TOKEN_IF "(" expr . ")" if_term TOKEN_ELSE statement

    ")"  shift, and go to state 181


State 174

   36 statement: TOKEN_PRINT expr_list ";" .

    $default  reduce using rule 36 (statement)


State 175

   30 statement: TOKEN_RETURN expr ";" .

    $default  reduce using rule 30 (statement)


State 176

   33 statement: TOKEN_WHILE "(" expr . ")" statement

    ")"  shift, and go to state 182


State 177

   35 statement: "{" stmnt_list "}" .

    $default  reduce using rule 35 (statement)


State 178

   37 statement: TOKEN_IDENT ":" auto_decl . decl_stmnt ";"

    "="  shift, and go to state 27

    $default  reduce using rule 9 (decl_stmnt)

    decl_stmnt  go to state 183


State 179

   34 statement: TOKEN_FOR "(" for_list ")" . statement

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    TOKEN_FOR      shift, and go to state 144
    TOKEN_IF       shift, and go to state 145
    TOKEN_PRINT    shift, and go to state 146
    TOKEN_RETURN   shift, and go to state 147
    TOKEN_WHILE    shift, and go to state 148
    "{"            shift, and go to state 149
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 150
    TOKEN_NUMBER   shift, and go to state 38

    statement   go to state 184
    expr        go to state 153
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 180

   43 for_list: for_arg ";" . for_arg ";" for_arg

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 45 (for_arg)

    for_arg     go to state 185
    expr        go to state 172
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 181

   31 statement: TOKEN_IF "(" expr ")" . statement
   32          | TOKEN_IF "(" expr ")" . if_term TOKEN_ELSE statement

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    TOKEN_FOR      shift, and go to state 144
    TOKEN_IF       shift, and go to state 186
    TOKEN_PRINT    shift, and go to state 146
    TOKEN_RETURN   shift, and go to state 147
    TOKEN_WHILE    shift, and go to state 148
    "{"            shift, and go to state 149
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 150
    TOKEN_NUMBER   shift, and go to state 38

    statement   go to state 187
    if_term     go to state 188
    expr        go to state 189
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 182

   33 statement: TOKEN_WHILE "(" expr ")" . statement

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    TOKEN_FOR      shift, and go to state 144
    TOKEN_IF       shift, and go to state 145
    TOKEN_PRINT    shift, and go to state 146
    TOKEN_RETURN   shift, and go to state 147
    TOKEN_WHILE    shift, and go to state 148
    "{"            shift, and go to state 149
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 150
    TOKEN_NUMBER   shift, and go to state 38

    statement   go to state 190
    expr        go to state 153
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 183

   37 statement: TOKEN_IDENT ":" auto_decl decl_stmnt . ";"

    ";"  shift, and go to state 191


State 184

   34 statement: TOKEN_FOR "(" for_list ")" statement .

    $default  reduce using rule 34 (statement)


State 185

   43 for_list: for_arg ";" for_arg . ";" for_arg

    ";"  shift, and go to state 192


State 186

   31 statement: TOKEN_IF . "(" expr ")" statement
   32          | TOKEN_IF . "(" expr ")" if_term TOKEN_ELSE statement
   41 if_term: TOKEN_IF . "(" expr ")" if_term TOKEN_ELSE if_term

    "("  shift, and go to state 193


State 187

   31 statement: TOKEN_IF "(" expr ")" statement .

    $default  reduce using rule 31 (statement)


State 188

   32 statement: TOKEN_IF "(" expr ")" if_term . TOKEN_ELSE statement

    TOKEN_ELSE  shift, and go to state 194


State 189

   38 statement: expr . ";"
   42 if_term: expr .

    ";"  shift, and go to state 167

    $default  reduce using rule 42 (if_term)


State 190

   33 statement: TOKEN_WHILE "(" expr ")" statement .

    $default  reduce using rule 33 (statement)


State 191

   37 statement: TOKEN_IDENT ":" auto_decl decl_stmnt ";" .

    $default  reduce using rule 37 (statement)


State 192

   43 for_list: for_arg ";" for_arg ";" . for_arg

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    $default  reduce using rule 45 (for_arg)

    for_arg     go to state 195
    expr        go to state 172
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 193

   31 statement: TOKEN_IF "(" . expr ")" statement
   32          | TOKEN_IF "(" . expr ")" if_term TOKEN_ELSE statement
   41 if_term: TOKEN_IF "(" . expr ")" if_term TOKEN_ELSE if_term

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    "{"            shift, and go to state 31
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 37
    TOKEN_NUMBER   shift, and go to state 38

    expr        go to state 196
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 194

   32 statement: TOKEN_IF "(" expr ")" if_term TOKEN_ELSE . statement

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    TOKEN_FOR      shift, and go to state 144
    TOKEN_IF       shift, and go to state 145
    TOKEN_PRINT    shift, and go to state 146
    TOKEN_RETURN   shift, and go to state 147
    TOKEN_WHILE    shift, and go to state 148
    "{"            shift, and go to state 149
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 150
    TOKEN_NUMBER   shift, and go to state 38

    statement   go to state 197
    expr        go to state 153
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 195

   43 for_list: for_arg ";" for_arg ";" for_arg .

    $default  reduce using rule 43 (for_list)


State 196

   31 statement: TOKEN_IF "(" expr . ")" statement
   32          | TOKEN_IF "(" expr . ")" if_term TOKEN_ELSE statement
   41 if_term: TOKEN_IF "(" expr . ")" if_term TOKEN_ELSE if_term

    ")"  shift, and go to state 198


State 197

   32 statement: TOKEN_IF "(" expr ")" if_term TOKEN_ELSE statement .

    $default  reduce using rule 32 (statement)


State 198

   31 statement: TOKEN_IF "(" expr ")" . statement
   32          | TOKEN_IF "(" expr ")" . if_term TOKEN_ELSE statement
   41 if_term: TOKEN_IF "(" expr ")" . if_term TOKEN_ELSE if_term

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    TOKEN_FOR      shift, and go to state 144
    TOKEN_IF       shift, and go to state 186
    TOKEN_PRINT    shift, and go to state 146
    TOKEN_RETURN   shift, and go to state 147
    TOKEN_WHILE    shift, and go to state 148
    "{"            shift, and go to state 149
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 150
    TOKEN_NUMBER   shift, and go to state 38

    statement   go to state 187
    if_term     go to state 199
    expr        go to state 189
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 199

   32 statement: TOKEN_IF "(" expr ")" if_term . TOKEN_ELSE statement
   41 if_term: TOKEN_IF "(" expr ")" if_term . TOKEN_ELSE if_term

    TOKEN_ELSE  shift, and go to state 200


State 200

   32 statement: TOKEN_IF "(" expr ")" if_term TOKEN_ELSE . statement
   41 if_term: TOKEN_IF "(" expr ")" if_term TOKEN_ELSE . if_term

    TOKEN_TRUE     shift, and go to state 29
    TOKEN_FALSE    shift, and go to state 30
    TOKEN_FOR      shift, and go to state 144
    TOKEN_IF       shift, and go to state 186
    TOKEN_PRINT    shift, and go to state 146
    TOKEN_RETURN   shift, and go to state 147
    TOKEN_WHILE    shift, and go to state 148
    "{"            shift, and go to state 149
    "("            shift, and go to state 32
    "-"            shift, and go to state 33
    "!"            shift, and go to state 34
    TOKEN_CHARLIT  shift, and go to state 35
    TOKEN_STRLIT   shift, and go to state 36
    TOKEN_IDENT    shift, and go to state 150
    TOKEN_NUMBER   shift, and go to state 38

    statement   go to state 197
    if_term     go to state 201
    expr        go to state 189
    or          go to state 40
    and         go to state 41
    comparison  go to state 42
    term        go to state 43
    factor      go to state 44
    exponent    go to state 45
    unary       go to state 46
    postfix     go to state 47
    pre_atomic  go to state 48
    atomic      go to state 49


State 201

   41 if_term: TOKEN_IF "(" expr ")" if_term TOKEN_ELSE if_term .

    $default  reduce using rule 41 (if_term)
