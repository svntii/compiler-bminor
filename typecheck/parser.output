Terminals unused in grammar

    TOKEN_WHILE
    TOKEN_ERROR
    TOKEN_COMMENT


Grammar

    0 $accept: program $end

    1 program: decl_list TOKEN_EOF

    2 decl_list: decl decl_list
    3          | ε

    4 decl: name ":" auto_decl decl_stmnt ";"
    5     | name ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" ";"
    6     | name ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" "=" body

    7 name: TOKEN_IDENT

    8 decl_stmnt: "=" expr
    9           | ε

   10 auto_decl: TOKEN_AUTO
   11          | type_decl

   12 type_decl: TOKEN_INT
   13          | TOKEN_BOOL
   14          | TOKEN_CHAR
   15          | TOKEN_STR
   16          | TOKEN_ARRAY "[" inside_arr "]" auto_decl

   17 auto_decl_args: TOKEN_AUTO
   18               | type_decl_args

   19 type_decl_args: TOKEN_INT
   20               | TOKEN_BOOL
   21               | TOKEN_CHAR
   22               | TOKEN_STR
   23               | TOKEN_ARRAY "[" inside_arr "]" auto_decl_args
   24               | TOKEN_FUNC return_types

   25 decl_args_epsilon: decl_args
   26                  | ε

   27 decl_args: name ":" auto_decl_args decl_args_end

   28 decl_args_end: "," decl_args
   29              | ε

   30 statement: TOKEN_IF "(" expr ")" statement
   31          | TOKEN_IF "(" expr ")" if_term TOKEN_ELSE statement
   32          | TOKEN_RETURN expr ";"
   33          | TOKEN_FOR "(" for_arg ";" for_arg ";" for_arg ")" statement
   34          | body
   35          | TOKEN_PRINT expr_epsilon ";"
   36          | name ":" auto_decl decl_stmnt ";"
   37          | expr ";"

   38 stmnt_list: statement stmnt_list
   39           | statement

   40 body: "{" stmnt_list "}"

   41 if_term: TOKEN_IF "(" expr ")" if_term TOKEN_ELSE if_term
   42        | TOKEN_RETURN expr ";"
   43        | TOKEN_FOR "(" for_arg ";" for_arg ";" for_arg ")" if_term
   44        | body
   45        | TOKEN_PRINT expr_epsilon ";"
   46        | name ":" auto_decl decl_stmnt ";"
   47        | expr ";"

   48 for_arg: expr
   49        | ε

   50 return_types: TOKEN_VOID
   51             | TOKEN_INT
   52             | TOKEN_BOOL
   53             | TOKEN_CHAR
   54             | TOKEN_STR

   55 expr_epsilon: expr_list
   56             | ε

   57 expr_list: expr "," expr_list
   58          | expr

   59 expr: ident_assign "=" expr
   60     | or "?" expr ":" expr
   61     | or

   62 or: or "||" and
   63   | and

   64 and: and "&&" comparison
   65    | comparison

   66 comparison: comparison ">" term
   67           | comparison ">=" term
   68           | comparison "<" term
   69           | comparison "<=" term
   70           | comparison "==" term
   71           | comparison "!=" term
   72           | term

   73 term: term "+" factor
   74     | term "-" factor
   75     | factor

   76 factor: factor "*" exponent
   77       | factor "/" exponent
   78       | factor "%" exponent
   79       | exponent

   80 exponent: exponent "^" unary
   81         | unary

   82 unary: "-" unary
   83      | "!" unary
   84      | postfix

   85 postfix: pre_atomic "++"
   86        | pre_atomic "--"
   87        | pre_atomic

   88 pre_atomic: name "(" arg_epsilon ")"
   89           | name "[" inside_arr "]" array_end
   90           | "(" expr ")"
   91           | atomic

   92 ident_assign: name
   93             | name "[" inside_arr "]" array_end

   94 atomic: TOKEN_NUMBER
   95       | TOKEN_STRLIT
   96       | TOKEN_CHARLIT
   97       | TOKEN_TRUE
   98       | TOKEN_FALSE
   99       | name
  100       | "{" atomic_array_epsilon "}"

  101 atomic_array_epsilon: atomic_array
  102                     | ε

  103 atomic_array: atomic atomic_array_end

  104 atomic_array_end: "," atomic_array
  105                 | ε

  106 arg_epsilon: arg_list
  107            | ε

  108 arg_list: expr arg_list_end

  109 arg_list_end: "," arg_list
  110             | ε

  111 array_end: "[" inside_arr "]" array_end
  112          | ε

  113 inside_arr: expr
  114           | ε


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOKEN_ARRAY (258) 16 23
    TOKEN_AUTO (259) 10 17
    TOKEN_BOOL (260) 13 20 52
    TOKEN_CHAR (261) 14 21 53
    TOKEN_ELSE (262) 31 41
    TOKEN_TRUE (263) 97
    TOKEN_FALSE (264) 98
    TOKEN_FOR (265) 33 43
    TOKEN_FUNC (266) 5 6 24
    TOKEN_IF (267) 30 31 41
    TOKEN_INT (268) 12 19 51
    TOKEN_PRINT (269) 35 45
    TOKEN_RETURN (270) 32 42
    TOKEN_STR (271) 15 22 54
    TOKEN_VOID (272) 50
    ";" (273) 4 5 32 33 35 36 37 42 43 45 46 47
    ":" (274) 4 5 6 27 36 46 60
    "," (275) 28 57 104 109
    "[" (276) 16 23 89 93 111
    "]" (277) 16 23 89 93 111
    "{" (278) 40 100
    "}" (279) 40 100
    "(" (280) 5 6 30 31 33 41 43 88 90
    ")" (281) 5 6 30 31 33 41 43 88 90
    "?" (282) 60
    "!=" (283) 71
    "<" (284) 68
    "<=" (285) 69
    ">" (286) 66
    ">=" (287) 67
    "==" (288) 70
    "+" (289) 73
    "-" (290) 74 82
    "/" (291) 77
    "*" (292) 76
    "%" (293) 78
    "^" (294) 80
    "||" (295) 62
    "&&" (296) 64
    "!" (297) 83
    "--" (298) 86
    "++" (299) 85
    "=" (300) 6 8 59
    TOKEN_CHARLIT (301) 96
    TOKEN_STRLIT (302) 95
    TOKEN_IDENT (303) 7
    TOKEN_NUMBER (304) 94
    TOKEN_EOF (305) 1
    TOKEN_WHILE (306)
    TOKEN_ERROR (307)
    TOKEN_COMMENT (308)


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    program <decl> (55)
        on left: 1
        on right: 0
    decl_list <decl> (56)
        on left: 2 3
        on right: 1 2
    decl <decl> (57)
        on left: 4 5 6
        on right: 2
    name <name> (58)
        on left: 7
        on right: 4 5 6 27 36 46 88 89 92 93 99
    decl_stmnt <expr> (59)
        on left: 8 9
        on right: 4 36 46
    auto_decl <type> (60)
        on left: 10 11
        on right: 4 16 36 46
    type_decl <type> (61)
        on left: 12 13 14 15 16
        on right: 11
    auto_decl_args <type> (62)
        on left: 17 18
        on right: 23 27
    type_decl_args <type> (63)
        on left: 19 20 21 22 23 24
        on right: 18
    decl_args_epsilon <param_list> (64)
        on left: 25 26
        on right: 5 6
    decl_args <param_list> (65)
        on left: 27
        on right: 25 28
    decl_args_end <param_list> (66)
        on left: 28 29
        on right: 27
    statement <stmt> (67)
        on left: 30 31 32 33 34 35 36 37
        on right: 30 31 33 38 39
    stmnt_list <stmt> (68)
        on left: 38 39
        on right: 38 40
    body <stmt> (69)
        on left: 40
        on right: 6 34 44
    if_term <stmt> (70)
        on left: 41 42 43 44 45 46 47
        on right: 31 41 43
    for_arg <expr> (71)
        on left: 48 49
        on right: 33 43
    return_types <type> (72)
        on left: 50 51 52 53 54
        on right: 5 6 24
    expr_epsilon <expr> (73)
        on left: 55 56
        on right: 35 45
    expr_list <expr> (74)
        on left: 57 58
        on right: 55 57
    expr <expr> (75)
        on left: 59 60 61
        on right: 8 30 31 32 37 41 42 47 48 57 58 59 60 90 108 113
    or <expr> (76)
        on left: 62 63
        on right: 60 61 62
    and <expr> (77)
        on left: 64 65
        on right: 62 63 64
    comparison <expr> (78)
        on left: 66 67 68 69 70 71 72
        on right: 64 65 66 67 68 69 70 71
    term <expr> (79)
        on left: 73 74 75
        on right: 66 67 68 69 70 71 72 73 74
    factor <expr> (80)
        on left: 76 77 78 79
        on right: 73 74 75 76 77 78
    exponent <expr> (81)
        on left: 80 81
        on right: 76 77 78 79 80
    unary <expr> (82)
        on left: 82 83 84
        on right: 80 81 82 83
    postfix <expr> (83)
        on left: 85 86 87
        on right: 84
    pre_atomic <expr> (84)
        on left: 88 89 90 91
        on right: 85 86 87
    ident_assign <expr> (85)
        on left: 92 93
        on right: 59
    atomic <expr> (86)
        on left: 94 95 96 97 98 99 100
        on right: 91 103
    atomic_array_epsilon <expr> (87)
        on left: 101 102
        on right: 100
    atomic_array <expr> (88)
        on left: 103
        on right: 101 104
    atomic_array_end <expr> (89)
        on left: 104 105
        on right: 103
    arg_epsilon <expr> (90)
        on left: 106 107
        on right: 88
    arg_list <expr> (91)
        on left: 108
        on right: 106 109
    arg_list_end <expr> (92)
        on left: 109 110
        on right: 108
    array_end <expr> (93)
        on left: 111 112
        on right: 89 93 111
    inside_arr <expr> (94)
        on left: 113 114
        on right: 16 23 89 93 111


State 0

    0 $accept: • program $end

    TOKEN_IDENT  shift, and go to state 1

    $default  reduce using rule 3 (decl_list)

    program    go to state 2
    decl_list  go to state 3
    decl       go to state 4
    name       go to state 5


State 1

    7 name: TOKEN_IDENT •

    $default  reduce using rule 7 (name)


State 2

    0 $accept: program • $end

    $end  shift, and go to state 6


State 3

    1 program: decl_list • TOKEN_EOF

    TOKEN_EOF  shift, and go to state 7


State 4

    2 decl_list: decl • decl_list

    TOKEN_IDENT  shift, and go to state 1

    $default  reduce using rule 3 (decl_list)

    decl_list  go to state 8
    decl       go to state 4
    name       go to state 5


State 5

    4 decl: name • ":" auto_decl decl_stmnt ";"
    5     | name • ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" ";"
    6     | name • ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" "=" body

    ":"  shift, and go to state 9


State 6

    0 $accept: program $end •

    $default  accept


State 7

    1 program: decl_list TOKEN_EOF •

    $default  reduce using rule 1 (program)


State 8

    2 decl_list: decl decl_list •

    $default  reduce using rule 2 (decl_list)


State 9

    4 decl: name ":" • auto_decl decl_stmnt ";"
    5     | name ":" • TOKEN_FUNC return_types "(" decl_args_epsilon ")" ";"
    6     | name ":" • TOKEN_FUNC return_types "(" decl_args_epsilon ")" "=" body

    TOKEN_ARRAY  shift, and go to state 10
    TOKEN_AUTO   shift, and go to state 11
    TOKEN_BOOL   shift, and go to state 12
    TOKEN_CHAR   shift, and go to state 13
    TOKEN_FUNC   shift, and go to state 14
    TOKEN_INT    shift, and go to state 15
    TOKEN_STR    shift, and go to state 16

    auto_decl  go to state 17
    type_decl  go to state 18


State 10

   16 type_decl: TOKEN_ARRAY • "[" inside_arr "]" auto_decl

    "["  shift, and go to state 19


State 11

   10 auto_decl: TOKEN_AUTO •

    $default  reduce using rule 10 (auto_decl)


State 12

   13 type_decl: TOKEN_BOOL •

    $default  reduce using rule 13 (type_decl)


State 13

   14 type_decl: TOKEN_CHAR •

    $default  reduce using rule 14 (type_decl)


State 14

    5 decl: name ":" TOKEN_FUNC • return_types "(" decl_args_epsilon ")" ";"
    6     | name ":" TOKEN_FUNC • return_types "(" decl_args_epsilon ")" "=" body

    TOKEN_BOOL  shift, and go to state 20
    TOKEN_CHAR  shift, and go to state 21
    TOKEN_INT   shift, and go to state 22
    TOKEN_STR   shift, and go to state 23
    TOKEN_VOID  shift, and go to state 24

    return_types  go to state 25


State 15

   12 type_decl: TOKEN_INT •

    $default  reduce using rule 12 (type_decl)


State 16

   15 type_decl: TOKEN_STR •

    $default  reduce using rule 15 (type_decl)


State 17

    4 decl: name ":" auto_decl • decl_stmnt ";"

    "="  shift, and go to state 26

    $default  reduce using rule 9 (decl_stmnt)

    decl_stmnt  go to state 27


State 18

   11 auto_decl: type_decl •

    $default  reduce using rule 11 (auto_decl)


State 19

   16 type_decl: TOKEN_ARRAY "[" • inside_arr "]" auto_decl

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    $default  reduce using rule 114 (inside_arr)

    name          go to state 37
    expr          go to state 38
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49
    inside_arr    go to state 50


State 20

   52 return_types: TOKEN_BOOL •

    $default  reduce using rule 52 (return_types)


State 21

   53 return_types: TOKEN_CHAR •

    $default  reduce using rule 53 (return_types)


State 22

   51 return_types: TOKEN_INT •

    $default  reduce using rule 51 (return_types)


State 23

   54 return_types: TOKEN_STR •

    $default  reduce using rule 54 (return_types)


State 24

   50 return_types: TOKEN_VOID •

    $default  reduce using rule 50 (return_types)


State 25

    5 decl: name ":" TOKEN_FUNC return_types • "(" decl_args_epsilon ")" ";"
    6     | name ":" TOKEN_FUNC return_types • "(" decl_args_epsilon ")" "=" body

    "("  shift, and go to state 51


State 26

    8 decl_stmnt: "=" • expr

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name          go to state 37
    expr          go to state 52
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 27

    4 decl: name ":" auto_decl decl_stmnt • ";"

    ";"  shift, and go to state 53


State 28

   97 atomic: TOKEN_TRUE •

    $default  reduce using rule 97 (atomic)


State 29

   98 atomic: TOKEN_FALSE •

    $default  reduce using rule 98 (atomic)


State 30

  100 atomic: "{" • atomic_array_epsilon "}"

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    $default  reduce using rule 102 (atomic_array_epsilon)

    name                  go to state 54
    atomic                go to state 55
    atomic_array_epsilon  go to state 56
    atomic_array          go to state 57


State 31

   90 pre_atomic: "(" • expr ")"

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name          go to state 37
    expr          go to state 58
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 32

   82 unary: "-" • unary

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name        go to state 59
    unary       go to state 60
    postfix     go to state 46
    pre_atomic  go to state 47
    atomic      go to state 49


State 33

   83 unary: "!" • unary

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name        go to state 59
    unary       go to state 61
    postfix     go to state 46
    pre_atomic  go to state 47
    atomic      go to state 49


State 34

   96 atomic: TOKEN_CHARLIT •

    $default  reduce using rule 96 (atomic)


State 35

   95 atomic: TOKEN_STRLIT •

    $default  reduce using rule 95 (atomic)


State 36

   94 atomic: TOKEN_NUMBER •

    $default  reduce using rule 94 (atomic)


State 37

   88 pre_atomic: name • "(" arg_epsilon ")"
   89           | name • "[" inside_arr "]" array_end
   92 ident_assign: name •
   93             | name • "[" inside_arr "]" array_end
   99 atomic: name •

    "["  shift, and go to state 62
    "("  shift, and go to state 63

    "="       reduce using rule 92 (ident_assign)
    $default  reduce using rule 99 (atomic)


State 38

  113 inside_arr: expr •

    $default  reduce using rule 113 (inside_arr)


State 39

   60 expr: or • "?" expr ":" expr
   61     | or •
   62 or: or • "||" and

    "?"   shift, and go to state 64
    "||"  shift, and go to state 65

    $default  reduce using rule 61 (expr)


State 40

   63 or: and •
   64 and: and • "&&" comparison

    "&&"  shift, and go to state 66

    $default  reduce using rule 63 (or)


State 41

   65 and: comparison •
   66 comparison: comparison • ">" term
   67           | comparison • ">=" term
   68           | comparison • "<" term
   69           | comparison • "<=" term
   70           | comparison • "==" term
   71           | comparison • "!=" term

    "!="  shift, and go to state 67
    "<"   shift, and go to state 68
    "<="  shift, and go to state 69
    ">"   shift, and go to state 70
    ">="  shift, and go to state 71
    "=="  shift, and go to state 72

    $default  reduce using rule 65 (and)


State 42

   72 comparison: term •
   73 term: term • "+" factor
   74     | term • "-" factor

    "+"  shift, and go to state 73
    "-"  shift, and go to state 74

    $default  reduce using rule 72 (comparison)


State 43

   75 term: factor •
   76 factor: factor • "*" exponent
   77       | factor • "/" exponent
   78       | factor • "%" exponent

    "/"  shift, and go to state 75
    "*"  shift, and go to state 76
    "%"  shift, and go to state 77

    $default  reduce using rule 75 (term)


State 44

   79 factor: exponent •
   80 exponent: exponent • "^" unary

    "^"  shift, and go to state 78

    $default  reduce using rule 79 (factor)


State 45

   81 exponent: unary •

    $default  reduce using rule 81 (exponent)


State 46

   84 unary: postfix •

    $default  reduce using rule 84 (unary)


State 47

   85 postfix: pre_atomic • "++"
   86        | pre_atomic • "--"
   87        | pre_atomic •

    "--"  shift, and go to state 79
    "++"  shift, and go to state 80

    $default  reduce using rule 87 (postfix)


State 48

   59 expr: ident_assign • "=" expr

    "="  shift, and go to state 81


State 49

   91 pre_atomic: atomic •

    $default  reduce using rule 91 (pre_atomic)


State 50

   16 type_decl: TOKEN_ARRAY "[" inside_arr • "]" auto_decl

    "]"  shift, and go to state 82


State 51

    5 decl: name ":" TOKEN_FUNC return_types "(" • decl_args_epsilon ")" ";"
    6     | name ":" TOKEN_FUNC return_types "(" • decl_args_epsilon ")" "=" body

    TOKEN_IDENT  shift, and go to state 1

    $default  reduce using rule 26 (decl_args_epsilon)

    name               go to state 83
    decl_args_epsilon  go to state 84
    decl_args          go to state 85


State 52

    8 decl_stmnt: "=" expr •

    $default  reduce using rule 8 (decl_stmnt)


State 53

    4 decl: name ":" auto_decl decl_stmnt ";" •

    $default  reduce using rule 4 (decl)


State 54

   99 atomic: name •

    $default  reduce using rule 99 (atomic)


State 55

  103 atomic_array: atomic • atomic_array_end

    ","  shift, and go to state 86

    $default  reduce using rule 105 (atomic_array_end)

    atomic_array_end  go to state 87


State 56

  100 atomic: "{" atomic_array_epsilon • "}"

    "}"  shift, and go to state 88


State 57

  101 atomic_array_epsilon: atomic_array •

    $default  reduce using rule 101 (atomic_array_epsilon)


State 58

   90 pre_atomic: "(" expr • ")"

    ")"  shift, and go to state 89


State 59

   88 pre_atomic: name • "(" arg_epsilon ")"
   89           | name • "[" inside_arr "]" array_end
   99 atomic: name •

    "["  shift, and go to state 90
    "("  shift, and go to state 63

    $default  reduce using rule 99 (atomic)


State 60

   82 unary: "-" unary •

    $default  reduce using rule 82 (unary)


State 61

   83 unary: "!" unary •

    $default  reduce using rule 83 (unary)


State 62

   89 pre_atomic: name "[" • inside_arr "]" array_end
   93 ident_assign: name "[" • inside_arr "]" array_end

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    $default  reduce using rule 114 (inside_arr)

    name          go to state 37
    expr          go to state 38
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49
    inside_arr    go to state 91


State 63

   88 pre_atomic: name "(" • arg_epsilon ")"

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    $default  reduce using rule 107 (arg_epsilon)

    name          go to state 37
    expr          go to state 92
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49
    arg_epsilon   go to state 93
    arg_list      go to state 94


State 64

   60 expr: or "?" • expr ":" expr

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name          go to state 37
    expr          go to state 95
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 65

   62 or: or "||" • and

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name        go to state 59
    and         go to state 96
    comparison  go to state 41
    term        go to state 42
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    postfix     go to state 46
    pre_atomic  go to state 47
    atomic      go to state 49


State 66

   64 and: and "&&" • comparison

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name        go to state 59
    comparison  go to state 97
    term        go to state 42
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    postfix     go to state 46
    pre_atomic  go to state 47
    atomic      go to state 49


State 67

   71 comparison: comparison "!=" • term

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name        go to state 59
    term        go to state 98
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    postfix     go to state 46
    pre_atomic  go to state 47
    atomic      go to state 49


State 68

   68 comparison: comparison "<" • term

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name        go to state 59
    term        go to state 99
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    postfix     go to state 46
    pre_atomic  go to state 47
    atomic      go to state 49


State 69

   69 comparison: comparison "<=" • term

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name        go to state 59
    term        go to state 100
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    postfix     go to state 46
    pre_atomic  go to state 47
    atomic      go to state 49


State 70

   66 comparison: comparison ">" • term

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name        go to state 59
    term        go to state 101
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    postfix     go to state 46
    pre_atomic  go to state 47
    atomic      go to state 49


State 71

   67 comparison: comparison ">=" • term

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name        go to state 59
    term        go to state 102
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    postfix     go to state 46
    pre_atomic  go to state 47
    atomic      go to state 49


State 72

   70 comparison: comparison "==" • term

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name        go to state 59
    term        go to state 103
    factor      go to state 43
    exponent    go to state 44
    unary       go to state 45
    postfix     go to state 46
    pre_atomic  go to state 47
    atomic      go to state 49


State 73

   73 term: term "+" • factor

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name        go to state 59
    factor      go to state 104
    exponent    go to state 44
    unary       go to state 45
    postfix     go to state 46
    pre_atomic  go to state 47
    atomic      go to state 49


State 74

   74 term: term "-" • factor

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name        go to state 59
    factor      go to state 105
    exponent    go to state 44
    unary       go to state 45
    postfix     go to state 46
    pre_atomic  go to state 47
    atomic      go to state 49


State 75

   77 factor: factor "/" • exponent

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name        go to state 59
    exponent    go to state 106
    unary       go to state 45
    postfix     go to state 46
    pre_atomic  go to state 47
    atomic      go to state 49


State 76

   76 factor: factor "*" • exponent

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name        go to state 59
    exponent    go to state 107
    unary       go to state 45
    postfix     go to state 46
    pre_atomic  go to state 47
    atomic      go to state 49


State 77

   78 factor: factor "%" • exponent

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name        go to state 59
    exponent    go to state 108
    unary       go to state 45
    postfix     go to state 46
    pre_atomic  go to state 47
    atomic      go to state 49


State 78

   80 exponent: exponent "^" • unary

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name        go to state 59
    unary       go to state 109
    postfix     go to state 46
    pre_atomic  go to state 47
    atomic      go to state 49


State 79

   86 postfix: pre_atomic "--" •

    $default  reduce using rule 86 (postfix)


State 80

   85 postfix: pre_atomic "++" •

    $default  reduce using rule 85 (postfix)


State 81

   59 expr: ident_assign "=" • expr

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name          go to state 37
    expr          go to state 110
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 82

   16 type_decl: TOKEN_ARRAY "[" inside_arr "]" • auto_decl

    TOKEN_ARRAY  shift, and go to state 10
    TOKEN_AUTO   shift, and go to state 11
    TOKEN_BOOL   shift, and go to state 12
    TOKEN_CHAR   shift, and go to state 13
    TOKEN_INT    shift, and go to state 15
    TOKEN_STR    shift, and go to state 16

    auto_decl  go to state 111
    type_decl  go to state 18


State 83

   27 decl_args: name • ":" auto_decl_args decl_args_end

    ":"  shift, and go to state 112


State 84

    5 decl: name ":" TOKEN_FUNC return_types "(" decl_args_epsilon • ")" ";"
    6     | name ":" TOKEN_FUNC return_types "(" decl_args_epsilon • ")" "=" body

    ")"  shift, and go to state 113


State 85

   25 decl_args_epsilon: decl_args •

    $default  reduce using rule 25 (decl_args_epsilon)


State 86

  104 atomic_array_end: "," • atomic_array

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name          go to state 54
    atomic        go to state 55
    atomic_array  go to state 114


State 87

  103 atomic_array: atomic atomic_array_end •

    $default  reduce using rule 103 (atomic_array)


State 88

  100 atomic: "{" atomic_array_epsilon "}" •

    $default  reduce using rule 100 (atomic)


State 89

   90 pre_atomic: "(" expr ")" •

    $default  reduce using rule 90 (pre_atomic)


State 90

   89 pre_atomic: name "[" • inside_arr "]" array_end

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    $default  reduce using rule 114 (inside_arr)

    name          go to state 37
    expr          go to state 38
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49
    inside_arr    go to state 115


State 91

   89 pre_atomic: name "[" inside_arr • "]" array_end
   93 ident_assign: name "[" inside_arr • "]" array_end

    "]"  shift, and go to state 116


State 92

  108 arg_list: expr • arg_list_end

    ","  shift, and go to state 117

    $default  reduce using rule 110 (arg_list_end)

    arg_list_end  go to state 118


State 93

   88 pre_atomic: name "(" arg_epsilon • ")"

    ")"  shift, and go to state 119


State 94

  106 arg_epsilon: arg_list •

    $default  reduce using rule 106 (arg_epsilon)


State 95

   60 expr: or "?" expr • ":" expr

    ":"  shift, and go to state 120


State 96

   62 or: or "||" and •
   64 and: and • "&&" comparison

    "&&"  shift, and go to state 66

    $default  reduce using rule 62 (or)


State 97

   64 and: and "&&" comparison •
   66 comparison: comparison • ">" term
   67           | comparison • ">=" term
   68           | comparison • "<" term
   69           | comparison • "<=" term
   70           | comparison • "==" term
   71           | comparison • "!=" term

    "!="  shift, and go to state 67
    "<"   shift, and go to state 68
    "<="  shift, and go to state 69
    ">"   shift, and go to state 70
    ">="  shift, and go to state 71
    "=="  shift, and go to state 72

    $default  reduce using rule 64 (and)


State 98

   71 comparison: comparison "!=" term •
   73 term: term • "+" factor
   74     | term • "-" factor

    "+"  shift, and go to state 73
    "-"  shift, and go to state 74

    $default  reduce using rule 71 (comparison)


State 99

   68 comparison: comparison "<" term •
   73 term: term • "+" factor
   74     | term • "-" factor

    "+"  shift, and go to state 73
    "-"  shift, and go to state 74

    $default  reduce using rule 68 (comparison)


State 100

   69 comparison: comparison "<=" term •
   73 term: term • "+" factor
   74     | term • "-" factor

    "+"  shift, and go to state 73
    "-"  shift, and go to state 74

    $default  reduce using rule 69 (comparison)


State 101

   66 comparison: comparison ">" term •
   73 term: term • "+" factor
   74     | term • "-" factor

    "+"  shift, and go to state 73
    "-"  shift, and go to state 74

    $default  reduce using rule 66 (comparison)


State 102

   67 comparison: comparison ">=" term •
   73 term: term • "+" factor
   74     | term • "-" factor

    "+"  shift, and go to state 73
    "-"  shift, and go to state 74

    $default  reduce using rule 67 (comparison)


State 103

   70 comparison: comparison "==" term •
   73 term: term • "+" factor
   74     | term • "-" factor

    "+"  shift, and go to state 73
    "-"  shift, and go to state 74

    $default  reduce using rule 70 (comparison)


State 104

   73 term: term "+" factor •
   76 factor: factor • "*" exponent
   77       | factor • "/" exponent
   78       | factor • "%" exponent

    "/"  shift, and go to state 75
    "*"  shift, and go to state 76
    "%"  shift, and go to state 77

    $default  reduce using rule 73 (term)


State 105

   74 term: term "-" factor •
   76 factor: factor • "*" exponent
   77       | factor • "/" exponent
   78       | factor • "%" exponent

    "/"  shift, and go to state 75
    "*"  shift, and go to state 76
    "%"  shift, and go to state 77

    $default  reduce using rule 74 (term)


State 106

   77 factor: factor "/" exponent •
   80 exponent: exponent • "^" unary

    "^"  shift, and go to state 78

    $default  reduce using rule 77 (factor)


State 107

   76 factor: factor "*" exponent •
   80 exponent: exponent • "^" unary

    "^"  shift, and go to state 78

    $default  reduce using rule 76 (factor)


State 108

   78 factor: factor "%" exponent •
   80 exponent: exponent • "^" unary

    "^"  shift, and go to state 78

    $default  reduce using rule 78 (factor)


State 109

   80 exponent: exponent "^" unary •

    $default  reduce using rule 80 (exponent)


State 110

   59 expr: ident_assign "=" expr •

    $default  reduce using rule 59 (expr)


State 111

   16 type_decl: TOKEN_ARRAY "[" inside_arr "]" auto_decl •

    $default  reduce using rule 16 (type_decl)


State 112

   27 decl_args: name ":" • auto_decl_args decl_args_end

    TOKEN_ARRAY  shift, and go to state 121
    TOKEN_AUTO   shift, and go to state 122
    TOKEN_BOOL   shift, and go to state 123
    TOKEN_CHAR   shift, and go to state 124
    TOKEN_FUNC   shift, and go to state 125
    TOKEN_INT    shift, and go to state 126
    TOKEN_STR    shift, and go to state 127

    auto_decl_args  go to state 128
    type_decl_args  go to state 129


State 113

    5 decl: name ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" • ";"
    6     | name ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" • "=" body

    ";"  shift, and go to state 130
    "="  shift, and go to state 131


State 114

  104 atomic_array_end: "," atomic_array •

    $default  reduce using rule 104 (atomic_array_end)


State 115

   89 pre_atomic: name "[" inside_arr • "]" array_end

    "]"  shift, and go to state 132


State 116

   89 pre_atomic: name "[" inside_arr "]" • array_end
   93 ident_assign: name "[" inside_arr "]" • array_end

    "["  shift, and go to state 133

    $default  reduce using rule 112 (array_end)

    array_end  go to state 134


State 117

  109 arg_list_end: "," • arg_list

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name          go to state 37
    expr          go to state 92
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49
    arg_list      go to state 135


State 118

  108 arg_list: expr arg_list_end •

    $default  reduce using rule 108 (arg_list)


State 119

   88 pre_atomic: name "(" arg_epsilon ")" •

    $default  reduce using rule 88 (pre_atomic)


State 120

   60 expr: or "?" expr ":" • expr

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name          go to state 37
    expr          go to state 136
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 121

   23 type_decl_args: TOKEN_ARRAY • "[" inside_arr "]" auto_decl_args

    "["  shift, and go to state 137


State 122

   17 auto_decl_args: TOKEN_AUTO •

    $default  reduce using rule 17 (auto_decl_args)


State 123

   20 type_decl_args: TOKEN_BOOL •

    $default  reduce using rule 20 (type_decl_args)


State 124

   21 type_decl_args: TOKEN_CHAR •

    $default  reduce using rule 21 (type_decl_args)


State 125

   24 type_decl_args: TOKEN_FUNC • return_types

    TOKEN_BOOL  shift, and go to state 20
    TOKEN_CHAR  shift, and go to state 21
    TOKEN_INT   shift, and go to state 22
    TOKEN_STR   shift, and go to state 23
    TOKEN_VOID  shift, and go to state 24

    return_types  go to state 138


State 126

   19 type_decl_args: TOKEN_INT •

    $default  reduce using rule 19 (type_decl_args)


State 127

   22 type_decl_args: TOKEN_STR •

    $default  reduce using rule 22 (type_decl_args)


State 128

   27 decl_args: name ":" auto_decl_args • decl_args_end

    ","  shift, and go to state 139

    $default  reduce using rule 29 (decl_args_end)

    decl_args_end  go to state 140


State 129

   18 auto_decl_args: type_decl_args •

    $default  reduce using rule 18 (auto_decl_args)


State 130

    5 decl: name ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" ";" •

    $default  reduce using rule 5 (decl)


State 131

    6 decl: name ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" "=" • body

    "{"  shift, and go to state 141

    body  go to state 142


State 132

   89 pre_atomic: name "[" inside_arr "]" • array_end

    "["  shift, and go to state 133

    $default  reduce using rule 112 (array_end)

    array_end  go to state 143


State 133

  111 array_end: "[" • inside_arr "]" array_end

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    $default  reduce using rule 114 (inside_arr)

    name          go to state 37
    expr          go to state 38
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49
    inside_arr    go to state 144


State 134

   89 pre_atomic: name "[" inside_arr "]" array_end •
   93 ident_assign: name "[" inside_arr "]" array_end •

    "="       reduce using rule 93 (ident_assign)
    $default  reduce using rule 89 (pre_atomic)


State 135

  109 arg_list_end: "," arg_list •

    $default  reduce using rule 109 (arg_list_end)


State 136

   60 expr: or "?" expr ":" expr •

    $default  reduce using rule 60 (expr)


State 137

   23 type_decl_args: TOKEN_ARRAY "[" • inside_arr "]" auto_decl_args

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    $default  reduce using rule 114 (inside_arr)

    name          go to state 37
    expr          go to state 38
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49
    inside_arr    go to state 145


State 138

   24 type_decl_args: TOKEN_FUNC return_types •

    $default  reduce using rule 24 (type_decl_args)


State 139

   28 decl_args_end: "," • decl_args

    TOKEN_IDENT  shift, and go to state 1

    name       go to state 83
    decl_args  go to state 146


State 140

   27 decl_args: name ":" auto_decl_args decl_args_end •

    $default  reduce using rule 27 (decl_args)


State 141

   40 body: "{" • stmnt_list "}"

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    TOKEN_FOR      shift, and go to state 147
    TOKEN_IF       shift, and go to state 148
    TOKEN_PRINT    shift, and go to state 149
    TOKEN_RETURN   shift, and go to state 150
    "{"            shift, and go to state 151
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name          go to state 152
    statement     go to state 153
    stmnt_list    go to state 154
    body          go to state 155
    expr          go to state 156
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 142

    6 decl: name ":" TOKEN_FUNC return_types "(" decl_args_epsilon ")" "=" body •

    $default  reduce using rule 6 (decl)


State 143

   89 pre_atomic: name "[" inside_arr "]" array_end •

    $default  reduce using rule 89 (pre_atomic)


State 144

  111 array_end: "[" inside_arr • "]" array_end

    "]"  shift, and go to state 157


State 145

   23 type_decl_args: TOKEN_ARRAY "[" inside_arr • "]" auto_decl_args

    "]"  shift, and go to state 158


State 146

   28 decl_args_end: "," decl_args •

    $default  reduce using rule 28 (decl_args_end)


State 147

   33 statement: TOKEN_FOR • "(" for_arg ";" for_arg ";" for_arg ")" statement

    "("  shift, and go to state 159


State 148

   30 statement: TOKEN_IF • "(" expr ")" statement
   31          | TOKEN_IF • "(" expr ")" if_term TOKEN_ELSE statement

    "("  shift, and go to state 160


State 149

   35 statement: TOKEN_PRINT • expr_epsilon ";"

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    $default  reduce using rule 56 (expr_epsilon)

    name          go to state 37
    expr_epsilon  go to state 161
    expr_list     go to state 162
    expr          go to state 163
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 150

   32 statement: TOKEN_RETURN • expr ";"

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name          go to state 37
    expr          go to state 164
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 151

   40 body: "{" • stmnt_list "}"
  100 atomic: "{" • atomic_array_epsilon "}"

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    TOKEN_FOR      shift, and go to state 147
    TOKEN_IF       shift, and go to state 148
    TOKEN_PRINT    shift, and go to state 149
    TOKEN_RETURN   shift, and go to state 150
    "{"            shift, and go to state 151
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    $default  reduce using rule 102 (atomic_array_epsilon)

    name                  go to state 152
    statement             go to state 153
    stmnt_list            go to state 154
    body                  go to state 155
    expr                  go to state 156
    or                    go to state 39
    and                   go to state 40
    comparison            go to state 41
    term                  go to state 42
    factor                go to state 43
    exponent              go to state 44
    unary                 go to state 45
    postfix               go to state 46
    pre_atomic            go to state 47
    ident_assign          go to state 48
    atomic                go to state 165
    atomic_array_epsilon  go to state 56
    atomic_array          go to state 57


State 152

   36 statement: name • ":" auto_decl decl_stmnt ";"
   88 pre_atomic: name • "(" arg_epsilon ")"
   89           | name • "[" inside_arr "]" array_end
   92 ident_assign: name •
   93             | name • "[" inside_arr "]" array_end
   99 atomic: name •

    ":"  shift, and go to state 166
    "["  shift, and go to state 62
    "("  shift, and go to state 63

    "="       reduce using rule 92 (ident_assign)
    $default  reduce using rule 99 (atomic)


State 153

   38 stmnt_list: statement • stmnt_list
   39           | statement •

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    TOKEN_FOR      shift, and go to state 147
    TOKEN_IF       shift, and go to state 148
    TOKEN_PRINT    shift, and go to state 149
    TOKEN_RETURN   shift, and go to state 150
    "{"            shift, and go to state 151
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    $default  reduce using rule 39 (stmnt_list)

    name          go to state 152
    statement     go to state 153
    stmnt_list    go to state 167
    body          go to state 155
    expr          go to state 156
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 154

   40 body: "{" stmnt_list • "}"

    "}"  shift, and go to state 168


State 155

   34 statement: body •

    $default  reduce using rule 34 (statement)


State 156

   37 statement: expr • ";"

    ";"  shift, and go to state 169


State 157

  111 array_end: "[" inside_arr "]" • array_end

    "["  shift, and go to state 133

    $default  reduce using rule 112 (array_end)

    array_end  go to state 170


State 158

   23 type_decl_args: TOKEN_ARRAY "[" inside_arr "]" • auto_decl_args

    TOKEN_ARRAY  shift, and go to state 121
    TOKEN_AUTO   shift, and go to state 122
    TOKEN_BOOL   shift, and go to state 123
    TOKEN_CHAR   shift, and go to state 124
    TOKEN_FUNC   shift, and go to state 125
    TOKEN_INT    shift, and go to state 126
    TOKEN_STR    shift, and go to state 127

    auto_decl_args  go to state 171
    type_decl_args  go to state 129


State 159

   33 statement: TOKEN_FOR "(" • for_arg ";" for_arg ";" for_arg ")" statement

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    $default  reduce using rule 49 (for_arg)

    name          go to state 37
    for_arg       go to state 172
    expr          go to state 173
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 160

   30 statement: TOKEN_IF "(" • expr ")" statement
   31          | TOKEN_IF "(" • expr ")" if_term TOKEN_ELSE statement

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name          go to state 37
    expr          go to state 174
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 161

   35 statement: TOKEN_PRINT expr_epsilon • ";"

    ";"  shift, and go to state 175


State 162

   55 expr_epsilon: expr_list •

    $default  reduce using rule 55 (expr_epsilon)


State 163

   57 expr_list: expr • "," expr_list
   58          | expr •

    ","  shift, and go to state 176

    $default  reduce using rule 58 (expr_list)


State 164

   32 statement: TOKEN_RETURN expr • ";"

    ";"  shift, and go to state 177


State 165

   91 pre_atomic: atomic •
  103 atomic_array: atomic • atomic_array_end

    ","  shift, and go to state 86

    "}"       reduce using rule 105 (atomic_array_end)
    $default  reduce using rule 91 (pre_atomic)

    atomic_array_end  go to state 87


State 166

   36 statement: name ":" • auto_decl decl_stmnt ";"

    TOKEN_ARRAY  shift, and go to state 10
    TOKEN_AUTO   shift, and go to state 11
    TOKEN_BOOL   shift, and go to state 12
    TOKEN_CHAR   shift, and go to state 13
    TOKEN_INT    shift, and go to state 15
    TOKEN_STR    shift, and go to state 16

    auto_decl  go to state 178
    type_decl  go to state 18


State 167

   38 stmnt_list: statement stmnt_list •

    $default  reduce using rule 38 (stmnt_list)


State 168

   40 body: "{" stmnt_list "}" •

    $default  reduce using rule 40 (body)


State 169

   37 statement: expr ";" •

    $default  reduce using rule 37 (statement)


State 170

  111 array_end: "[" inside_arr "]" array_end •

    $default  reduce using rule 111 (array_end)


State 171

   23 type_decl_args: TOKEN_ARRAY "[" inside_arr "]" auto_decl_args •

    $default  reduce using rule 23 (type_decl_args)


State 172

   33 statement: TOKEN_FOR "(" for_arg • ";" for_arg ";" for_arg ")" statement

    ";"  shift, and go to state 179


State 173

   48 for_arg: expr •

    $default  reduce using rule 48 (for_arg)


State 174

   30 statement: TOKEN_IF "(" expr • ")" statement
   31          | TOKEN_IF "(" expr • ")" if_term TOKEN_ELSE statement

    ")"  shift, and go to state 180


State 175

   35 statement: TOKEN_PRINT expr_epsilon ";" •

    $default  reduce using rule 35 (statement)


State 176

   57 expr_list: expr "," • expr_list

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name          go to state 37
    expr_list     go to state 181
    expr          go to state 163
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 177

   32 statement: TOKEN_RETURN expr ";" •

    $default  reduce using rule 32 (statement)


State 178

   36 statement: name ":" auto_decl • decl_stmnt ";"

    "="  shift, and go to state 26

    $default  reduce using rule 9 (decl_stmnt)

    decl_stmnt  go to state 182


State 179

   33 statement: TOKEN_FOR "(" for_arg ";" • for_arg ";" for_arg ")" statement

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    $default  reduce using rule 49 (for_arg)

    name          go to state 37
    for_arg       go to state 183
    expr          go to state 173
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 180

   30 statement: TOKEN_IF "(" expr ")" • statement
   31          | TOKEN_IF "(" expr ")" • if_term TOKEN_ELSE statement

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    TOKEN_FOR      shift, and go to state 184
    TOKEN_IF       shift, and go to state 185
    TOKEN_PRINT    shift, and go to state 186
    TOKEN_RETURN   shift, and go to state 187
    "{"            shift, and go to state 151
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name          go to state 188
    statement     go to state 189
    body          go to state 190
    if_term       go to state 191
    expr          go to state 192
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 181

   57 expr_list: expr "," expr_list •

    $default  reduce using rule 57 (expr_list)


State 182

   36 statement: name ":" auto_decl decl_stmnt • ";"

    ";"  shift, and go to state 193


State 183

   33 statement: TOKEN_FOR "(" for_arg ";" for_arg • ";" for_arg ")" statement

    ";"  shift, and go to state 194


State 184

   33 statement: TOKEN_FOR • "(" for_arg ";" for_arg ";" for_arg ")" statement
   43 if_term: TOKEN_FOR • "(" for_arg ";" for_arg ";" for_arg ")" if_term

    "("  shift, and go to state 195


State 185

   30 statement: TOKEN_IF • "(" expr ")" statement
   31          | TOKEN_IF • "(" expr ")" if_term TOKEN_ELSE statement
   41 if_term: TOKEN_IF • "(" expr ")" if_term TOKEN_ELSE if_term

    "("  shift, and go to state 196


State 186

   35 statement: TOKEN_PRINT • expr_epsilon ";"
   45 if_term: TOKEN_PRINT • expr_epsilon ";"

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    $default  reduce using rule 56 (expr_epsilon)

    name          go to state 37
    expr_epsilon  go to state 197
    expr_list     go to state 162
    expr          go to state 163
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 187

   32 statement: TOKEN_RETURN • expr ";"
   42 if_term: TOKEN_RETURN • expr ";"

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name          go to state 37
    expr          go to state 198
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 188

   36 statement: name • ":" auto_decl decl_stmnt ";"
   46 if_term: name • ":" auto_decl decl_stmnt ";"
   88 pre_atomic: name • "(" arg_epsilon ")"
   89           | name • "[" inside_arr "]" array_end
   92 ident_assign: name •
   93             | name • "[" inside_arr "]" array_end
   99 atomic: name •

    ":"  shift, and go to state 199
    "["  shift, and go to state 62
    "("  shift, and go to state 63

    "="       reduce using rule 92 (ident_assign)
    $default  reduce using rule 99 (atomic)


State 189

   30 statement: TOKEN_IF "(" expr ")" statement •

    $default  reduce using rule 30 (statement)


State 190

   34 statement: body •
   44 if_term: body •

    TOKEN_ELSE  reduce using rule 44 (if_term)
    $default    reduce using rule 34 (statement)


State 191

   31 statement: TOKEN_IF "(" expr ")" if_term • TOKEN_ELSE statement

    TOKEN_ELSE  shift, and go to state 200


State 192

   37 statement: expr • ";"
   47 if_term: expr • ";"

    ";"  shift, and go to state 201


State 193

   36 statement: name ":" auto_decl decl_stmnt ";" •

    $default  reduce using rule 36 (statement)


State 194

   33 statement: TOKEN_FOR "(" for_arg ";" for_arg ";" • for_arg ")" statement

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    $default  reduce using rule 49 (for_arg)

    name          go to state 37
    for_arg       go to state 202
    expr          go to state 173
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 195

   33 statement: TOKEN_FOR "(" • for_arg ";" for_arg ";" for_arg ")" statement
   43 if_term: TOKEN_FOR "(" • for_arg ";" for_arg ";" for_arg ")" if_term

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    $default  reduce using rule 49 (for_arg)

    name          go to state 37
    for_arg       go to state 203
    expr          go to state 173
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 196

   30 statement: TOKEN_IF "(" • expr ")" statement
   31          | TOKEN_IF "(" • expr ")" if_term TOKEN_ELSE statement
   41 if_term: TOKEN_IF "(" • expr ")" if_term TOKEN_ELSE if_term

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name          go to state 37
    expr          go to state 204
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 197

   35 statement: TOKEN_PRINT expr_epsilon • ";"
   45 if_term: TOKEN_PRINT expr_epsilon • ";"

    ";"  shift, and go to state 205


State 198

   32 statement: TOKEN_RETURN expr • ";"
   42 if_term: TOKEN_RETURN expr • ";"

    ";"  shift, and go to state 206


State 199

   36 statement: name ":" • auto_decl decl_stmnt ";"
   46 if_term: name ":" • auto_decl decl_stmnt ";"

    TOKEN_ARRAY  shift, and go to state 10
    TOKEN_AUTO   shift, and go to state 11
    TOKEN_BOOL   shift, and go to state 12
    TOKEN_CHAR   shift, and go to state 13
    TOKEN_INT    shift, and go to state 15
    TOKEN_STR    shift, and go to state 16

    auto_decl  go to state 207
    type_decl  go to state 18


State 200

   31 statement: TOKEN_IF "(" expr ")" if_term TOKEN_ELSE • statement

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    TOKEN_FOR      shift, and go to state 147
    TOKEN_IF       shift, and go to state 148
    TOKEN_PRINT    shift, and go to state 149
    TOKEN_RETURN   shift, and go to state 150
    "{"            shift, and go to state 151
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name          go to state 152
    statement     go to state 208
    body          go to state 155
    expr          go to state 156
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 201

   37 statement: expr ";" •
   47 if_term: expr ";" •

    TOKEN_ELSE  reduce using rule 47 (if_term)
    $default    reduce using rule 37 (statement)


State 202

   33 statement: TOKEN_FOR "(" for_arg ";" for_arg ";" for_arg • ")" statement

    ")"  shift, and go to state 209


State 203

   33 statement: TOKEN_FOR "(" for_arg • ";" for_arg ";" for_arg ")" statement
   43 if_term: TOKEN_FOR "(" for_arg • ";" for_arg ";" for_arg ")" if_term

    ";"  shift, and go to state 210


State 204

   30 statement: TOKEN_IF "(" expr • ")" statement
   31          | TOKEN_IF "(" expr • ")" if_term TOKEN_ELSE statement
   41 if_term: TOKEN_IF "(" expr • ")" if_term TOKEN_ELSE if_term

    ")"  shift, and go to state 211


State 205

   35 statement: TOKEN_PRINT expr_epsilon ";" •
   45 if_term: TOKEN_PRINT expr_epsilon ";" •

    TOKEN_ELSE  reduce using rule 45 (if_term)
    $default    reduce using rule 35 (statement)


State 206

   32 statement: TOKEN_RETURN expr ";" •
   42 if_term: TOKEN_RETURN expr ";" •

    TOKEN_ELSE  reduce using rule 42 (if_term)
    $default    reduce using rule 32 (statement)


State 207

   36 statement: name ":" auto_decl • decl_stmnt ";"
   46 if_term: name ":" auto_decl • decl_stmnt ";"

    "="  shift, and go to state 26

    $default  reduce using rule 9 (decl_stmnt)

    decl_stmnt  go to state 212


State 208

   31 statement: TOKEN_IF "(" expr ")" if_term TOKEN_ELSE statement •

    $default  reduce using rule 31 (statement)


State 209

   33 statement: TOKEN_FOR "(" for_arg ";" for_arg ";" for_arg ")" • statement

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    TOKEN_FOR      shift, and go to state 147
    TOKEN_IF       shift, and go to state 148
    TOKEN_PRINT    shift, and go to state 149
    TOKEN_RETURN   shift, and go to state 150
    "{"            shift, and go to state 151
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name          go to state 152
    statement     go to state 213
    body          go to state 155
    expr          go to state 156
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 210

   33 statement: TOKEN_FOR "(" for_arg ";" • for_arg ";" for_arg ")" statement
   43 if_term: TOKEN_FOR "(" for_arg ";" • for_arg ";" for_arg ")" if_term

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    $default  reduce using rule 49 (for_arg)

    name          go to state 37
    for_arg       go to state 214
    expr          go to state 173
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 211

   30 statement: TOKEN_IF "(" expr ")" • statement
   31          | TOKEN_IF "(" expr ")" • if_term TOKEN_ELSE statement
   41 if_term: TOKEN_IF "(" expr ")" • if_term TOKEN_ELSE if_term

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    TOKEN_FOR      shift, and go to state 184
    TOKEN_IF       shift, and go to state 185
    TOKEN_PRINT    shift, and go to state 186
    TOKEN_RETURN   shift, and go to state 187
    "{"            shift, and go to state 151
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name          go to state 188
    statement     go to state 189
    body          go to state 190
    if_term       go to state 215
    expr          go to state 192
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 212

   36 statement: name ":" auto_decl decl_stmnt • ";"
   46 if_term: name ":" auto_decl decl_stmnt • ";"

    ";"  shift, and go to state 216


State 213

   33 statement: TOKEN_FOR "(" for_arg ";" for_arg ";" for_arg ")" statement •

    $default  reduce using rule 33 (statement)


State 214

   33 statement: TOKEN_FOR "(" for_arg ";" for_arg • ";" for_arg ")" statement
   43 if_term: TOKEN_FOR "(" for_arg ";" for_arg • ";" for_arg ")" if_term

    ";"  shift, and go to state 217


State 215

   31 statement: TOKEN_IF "(" expr ")" if_term • TOKEN_ELSE statement
   41 if_term: TOKEN_IF "(" expr ")" if_term • TOKEN_ELSE if_term

    TOKEN_ELSE  shift, and go to state 218


State 216

   36 statement: name ":" auto_decl decl_stmnt ";" •
   46 if_term: name ":" auto_decl decl_stmnt ";" •

    TOKEN_ELSE  reduce using rule 46 (if_term)
    $default    reduce using rule 36 (statement)


State 217

   33 statement: TOKEN_FOR "(" for_arg ";" for_arg ";" • for_arg ")" statement
   43 if_term: TOKEN_FOR "(" for_arg ";" for_arg ";" • for_arg ")" if_term

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    "{"            shift, and go to state 30
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    $default  reduce using rule 49 (for_arg)

    name          go to state 37
    for_arg       go to state 219
    expr          go to state 173
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 218

   31 statement: TOKEN_IF "(" expr ")" if_term TOKEN_ELSE • statement
   41 if_term: TOKEN_IF "(" expr ")" if_term TOKEN_ELSE • if_term

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    TOKEN_FOR      shift, and go to state 184
    TOKEN_IF       shift, and go to state 185
    TOKEN_PRINT    shift, and go to state 186
    TOKEN_RETURN   shift, and go to state 187
    "{"            shift, and go to state 151
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name          go to state 188
    statement     go to state 208
    body          go to state 190
    if_term       go to state 220
    expr          go to state 192
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 219

   33 statement: TOKEN_FOR "(" for_arg ";" for_arg ";" for_arg • ")" statement
   43 if_term: TOKEN_FOR "(" for_arg ";" for_arg ";" for_arg • ")" if_term

    ")"  shift, and go to state 221


State 220

   41 if_term: TOKEN_IF "(" expr ")" if_term TOKEN_ELSE if_term •

    $default  reduce using rule 41 (if_term)


State 221

   33 statement: TOKEN_FOR "(" for_arg ";" for_arg ";" for_arg ")" • statement
   43 if_term: TOKEN_FOR "(" for_arg ";" for_arg ";" for_arg ")" • if_term

    TOKEN_TRUE     shift, and go to state 28
    TOKEN_FALSE    shift, and go to state 29
    TOKEN_FOR      shift, and go to state 184
    TOKEN_IF       shift, and go to state 185
    TOKEN_PRINT    shift, and go to state 186
    TOKEN_RETURN   shift, and go to state 187
    "{"            shift, and go to state 151
    "("            shift, and go to state 31
    "-"            shift, and go to state 32
    "!"            shift, and go to state 33
    TOKEN_CHARLIT  shift, and go to state 34
    TOKEN_STRLIT   shift, and go to state 35
    TOKEN_IDENT    shift, and go to state 1
    TOKEN_NUMBER   shift, and go to state 36

    name          go to state 188
    statement     go to state 213
    body          go to state 190
    if_term       go to state 222
    expr          go to state 192
    or            go to state 39
    and           go to state 40
    comparison    go to state 41
    term          go to state 42
    factor        go to state 43
    exponent      go to state 44
    unary         go to state 45
    postfix       go to state 46
    pre_atomic    go to state 47
    ident_assign  go to state 48
    atomic        go to state 49


State 222

   43 if_term: TOKEN_FOR "(" for_arg ";" for_arg ";" for_arg ")" if_term •

    $default  reduce using rule 43 (if_term)
